/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 30.0, "minX": 0.0, "maxY": 17382.0, "series": [{"data": [[0.0, 317.0], [0.1, 355.0], [0.2, 415.0], [0.3, 444.0], [0.4, 494.0], [0.5, 645.0], [0.6, 699.0], [0.7, 707.0], [0.8, 855.0], [0.9, 865.0], [1.0, 896.0], [1.1, 936.0], [1.2, 1004.0], [1.3, 1341.0], [1.4, 1364.0], [1.5, 1401.0], [1.6, 1472.0], [1.7, 1491.0], [1.8, 1512.0], [1.9, 1535.0], [2.0, 1552.0], [2.1, 1650.0], [2.2, 1693.0], [2.3, 1797.0], [2.4, 1849.0], [2.5, 1853.0], [2.6, 2019.0], [2.7, 2054.0], [2.8, 2084.0], [2.9, 2089.0], [3.0, 2154.0], [3.1, 2174.0], [3.2, 2232.0], [3.3, 2277.0], [3.4, 2280.0], [3.5, 2284.0], [3.6, 2323.0], [3.7, 2446.0], [3.8, 2580.0], [3.9, 2601.0], [4.0, 2650.0], [4.1, 2652.0], [4.2, 2675.0], [4.3, 2729.0], [4.4, 2748.0], [4.5, 2767.0], [4.6, 2790.0], [4.7, 2798.0], [4.8, 2811.0], [4.9, 2858.0], [5.0, 2859.0], [5.1, 2866.0], [5.2, 2974.0], [5.3, 3021.0], [5.4, 3062.0], [5.5, 3107.0], [5.6, 3115.0], [5.7, 3228.0], [5.8, 3236.0], [5.9, 3241.0], [6.0, 3253.0], [6.1, 3285.0], [6.2, 3319.0], [6.3, 3323.0], [6.4, 3343.0], [6.5, 3364.0], [6.6, 3393.0], [6.7, 3415.0], [6.8, 3535.0], [6.9, 3537.0], [7.0, 3570.0], [7.1, 3572.0], [7.2, 3610.0], [7.3, 3635.0], [7.4, 3680.0], [7.5, 3708.0], [7.6, 3762.0], [7.7, 3771.0], [7.8, 3775.0], [7.9, 3791.0], [8.0, 4088.0], [8.1, 4133.0], [8.2, 4166.0], [8.3, 4193.0], [8.4, 4208.0], [8.5, 4214.0], [8.6, 4217.0], [8.7, 4218.0], [8.8, 4220.0], [8.9, 4223.0], [9.0, 4239.0], [9.1, 4271.0], [9.2, 4295.0], [9.3, 4505.0], [9.4, 4522.0], [9.5, 4524.0], [9.6, 4525.0], [9.7, 4539.0], [9.8, 4543.0], [9.9, 4556.0], [10.0, 4585.0], [10.1, 4647.0], [10.2, 4680.0], [10.3, 4710.0], [10.4, 4736.0], [10.5, 4793.0], [10.6, 4826.0], [10.7, 4873.0], [10.8, 4879.0], [10.9, 4882.0], [11.0, 4885.0], [11.1, 4914.0], [11.2, 4948.0], [11.3, 4982.0], [11.4, 5015.0], [11.5, 5016.0], [11.6, 5020.0], [11.7, 5046.0], [11.8, 5070.0], [11.9, 5185.0], [12.0, 5214.0], [12.1, 5232.0], [12.2, 5256.0], [12.3, 5272.0], [12.4, 5277.0], [12.5, 5299.0], [12.6, 5323.0], [12.7, 5340.0], [12.8, 5354.0], [12.9, 5369.0], [13.0, 5370.0], [13.1, 5372.0], [13.2, 5378.0], [13.3, 5379.0], [13.4, 5380.0], [13.5, 5382.0], [13.6, 5385.0], [13.7, 5419.0], [13.8, 5422.0], [13.9, 5422.0], [14.0, 5423.0], [14.1, 5427.0], [14.2, 5431.0], [14.3, 5439.0], [14.4, 5443.0], [14.5, 5499.0], [14.6, 5521.0], [14.7, 5539.0], [14.8, 5554.0], [14.9, 5561.0], [15.0, 5576.0], [15.1, 5592.0], [15.2, 5602.0], [15.3, 5631.0], [15.4, 5657.0], [15.5, 5687.0], [15.6, 5691.0], [15.7, 5707.0], [15.8, 5711.0], [15.9, 5915.0], [16.0, 5932.0], [16.1, 5933.0], [16.2, 5934.0], [16.3, 5935.0], [16.4, 5947.0], [16.5, 5978.0], [16.6, 6014.0], [16.7, 6072.0], [16.8, 6092.0], [16.9, 6096.0], [17.0, 6096.0], [17.1, 6098.0], [17.2, 6114.0], [17.3, 6116.0], [17.4, 6120.0], [17.5, 6122.0], [17.6, 6123.0], [17.7, 6125.0], [17.8, 6126.0], [17.9, 6129.0], [18.0, 6184.0], [18.1, 6186.0], [18.2, 6188.0], [18.3, 6189.0], [18.4, 6190.0], [18.5, 6194.0], [18.6, 6196.0], [18.7, 6237.0], [18.8, 6273.0], [18.9, 6330.0], [19.0, 6358.0], [19.1, 6360.0], [19.2, 6369.0], [19.3, 6379.0], [19.4, 6393.0], [19.5, 6405.0], [19.6, 6419.0], [19.7, 6422.0], [19.8, 6424.0], [19.9, 6425.0], [20.0, 6426.0], [20.1, 6428.0], [20.2, 6429.0], [20.3, 6430.0], [20.4, 6431.0], [20.5, 6433.0], [20.6, 6435.0], [20.7, 6436.0], [20.8, 6440.0], [20.9, 6445.0], [21.0, 6447.0], [21.1, 6453.0], [21.2, 6454.0], [21.3, 6455.0], [21.4, 6457.0], [21.5, 6461.0], [21.6, 6478.0], [21.7, 6480.0], [21.8, 6483.0], [21.9, 6484.0], [22.0, 6485.0], [22.1, 6487.0], [22.2, 6491.0], [22.3, 6492.0], [22.4, 6494.0], [22.5, 6495.0], [22.6, 6510.0], [22.7, 6532.0], [22.8, 6548.0], [22.9, 6561.0], [23.0, 6577.0], [23.1, 6596.0], [23.2, 6616.0], [23.3, 6627.0], [23.4, 6636.0], [23.5, 6643.0], [23.6, 6651.0], [23.7, 6659.0], [23.8, 6662.0], [23.9, 6672.0], [24.0, 6679.0], [24.1, 6688.0], [24.2, 6697.0], [24.3, 6706.0], [24.4, 6710.0], [24.5, 6713.0], [24.6, 6715.0], [24.7, 6717.0], [24.8, 6720.0], [24.9, 6725.0], [25.0, 6726.0], [25.1, 6727.0], [25.2, 6729.0], [25.3, 6731.0], [25.4, 6732.0], [25.5, 6733.0], [25.6, 6734.0], [25.7, 6735.0], [25.8, 6737.0], [25.9, 6739.0], [26.0, 6740.0], [26.1, 6746.0], [26.2, 6773.0], [26.3, 6785.0], [26.4, 6790.0], [26.5, 6792.0], [26.6, 6800.0], [26.7, 6801.0], [26.8, 6803.0], [26.9, 6804.0], [27.0, 6805.0], [27.1, 6806.0], [27.2, 6807.0], [27.3, 6819.0], [27.4, 6840.0], [27.5, 6846.0], [27.6, 6863.0], [27.7, 6876.0], [27.8, 6897.0], [27.9, 6919.0], [28.0, 6937.0], [28.1, 6982.0], [28.2, 6994.0], [28.3, 7012.0], [28.4, 7034.0], [28.5, 7045.0], [28.6, 7050.0], [28.7, 7064.0], [28.8, 7093.0], [28.9, 7133.0], [29.0, 7142.0], [29.1, 7145.0], [29.2, 7147.0], [29.3, 7148.0], [29.4, 7150.0], [29.5, 7158.0], [29.6, 7159.0], [29.7, 7161.0], [29.8, 7162.0], [29.9, 7163.0], [30.0, 7164.0], [30.1, 7165.0], [30.2, 7166.0], [30.3, 7167.0], [30.4, 7168.0], [30.5, 7170.0], [30.6, 7173.0], [30.7, 7220.0], [30.8, 7263.0], [30.9, 7264.0], [31.0, 7265.0], [31.1, 7267.0], [31.2, 7267.0], [31.3, 7268.0], [31.4, 7269.0], [31.5, 7270.0], [31.6, 7270.0], [31.7, 7271.0], [31.8, 7277.0], [31.9, 7289.0], [32.0, 7302.0], [32.1, 7304.0], [32.2, 7308.0], [32.3, 7312.0], [32.4, 7312.0], [32.5, 7316.0], [32.6, 7364.0], [32.7, 7389.0], [32.8, 7406.0], [32.9, 7420.0], [33.0, 7443.0], [33.1, 7487.0], [33.2, 7509.0], [33.3, 7526.0], [33.4, 7542.0], [33.5, 7556.0], [33.6, 7570.0], [33.7, 7577.0], [33.8, 7593.0], [33.9, 7609.0], [34.0, 7616.0], [34.1, 7625.0], [34.2, 7627.0], [34.3, 7630.0], [34.4, 7634.0], [34.5, 7635.0], [34.6, 7637.0], [34.7, 7644.0], [34.8, 7648.0], [34.9, 7649.0], [35.0, 7659.0], [35.1, 7662.0], [35.2, 7665.0], [35.3, 7666.0], [35.4, 7668.0], [35.5, 7669.0], [35.6, 7672.0], [35.7, 7697.0], [35.8, 7700.0], [35.9, 7702.0], [36.0, 7706.0], [36.1, 7709.0], [36.2, 7744.0], [36.3, 7763.0], [36.4, 7870.0], [36.5, 7874.0], [36.6, 7875.0], [36.7, 7877.0], [36.8, 7880.0], [36.9, 7888.0], [37.0, 7894.0], [37.1, 7904.0], [37.2, 7909.0], [37.3, 7915.0], [37.4, 7920.0], [37.5, 7927.0], [37.6, 7931.0], [37.7, 7940.0], [37.8, 7946.0], [37.9, 7949.0], [38.0, 7951.0], [38.1, 7952.0], [38.2, 7955.0], [38.3, 7957.0], [38.4, 7958.0], [38.5, 7959.0], [38.6, 7959.0], [38.7, 7960.0], [38.8, 7961.0], [38.9, 7963.0], [39.0, 7966.0], [39.1, 7977.0], [39.2, 7995.0], [39.3, 8009.0], [39.4, 8019.0], [39.5, 8031.0], [39.6, 8043.0], [39.7, 8055.0], [39.8, 8058.0], [39.9, 8059.0], [40.0, 8060.0], [40.1, 8069.0], [40.2, 8077.0], [40.3, 8085.0], [40.4, 8092.0], [40.5, 8098.0], [40.6, 8101.0], [40.7, 8103.0], [40.8, 8104.0], [40.9, 8105.0], [41.0, 8106.0], [41.1, 8107.0], [41.2, 8108.0], [41.3, 8111.0], [41.4, 8113.0], [41.5, 8120.0], [41.6, 8125.0], [41.7, 8127.0], [41.8, 8128.0], [41.9, 8129.0], [42.0, 8130.0], [42.1, 8134.0], [42.2, 8143.0], [42.3, 8157.0], [42.4, 8174.0], [42.5, 8185.0], [42.6, 8189.0], [42.7, 8190.0], [42.8, 8191.0], [42.9, 8192.0], [43.0, 8193.0], [43.1, 8195.0], [43.2, 8197.0], [43.3, 8198.0], [43.4, 8200.0], [43.5, 8201.0], [43.6, 8204.0], [43.7, 8207.0], [43.8, 8208.0], [43.9, 8213.0], [44.0, 8214.0], [44.1, 8215.0], [44.2, 8217.0], [44.3, 8219.0], [44.4, 8224.0], [44.5, 8234.0], [44.6, 8249.0], [44.7, 8252.0], [44.8, 8257.0], [44.9, 8259.0], [45.0, 8260.0], [45.1, 8261.0], [45.2, 8263.0], [45.3, 8264.0], [45.4, 8266.0], [45.5, 8268.0], [45.6, 8279.0], [45.7, 8301.0], [45.8, 8338.0], [45.9, 8342.0], [46.0, 8343.0], [46.1, 8344.0], [46.2, 8344.0], [46.3, 8345.0], [46.4, 8347.0], [46.5, 8349.0], [46.6, 8350.0], [46.7, 8351.0], [46.8, 8353.0], [46.9, 8355.0], [47.0, 8359.0], [47.1, 8361.0], [47.2, 8363.0], [47.3, 8371.0], [47.4, 8400.0], [47.5, 8439.0], [47.6, 8457.0], [47.7, 8474.0], [47.8, 8504.0], [47.9, 8551.0], [48.0, 8561.0], [48.1, 8562.0], [48.2, 8564.0], [48.3, 8565.0], [48.4, 8568.0], [48.5, 8569.0], [48.6, 8570.0], [48.7, 8571.0], [48.8, 8572.0], [48.9, 8574.0], [49.0, 8589.0], [49.1, 8597.0], [49.2, 8604.0], [49.3, 8610.0], [49.4, 8618.0], [49.5, 8621.0], [49.6, 8637.0], [49.7, 8645.0], [49.8, 8654.0], [49.9, 8660.0], [50.0, 8666.0], [50.1, 8671.0], [50.2, 8673.0], [50.3, 8677.0], [50.4, 8680.0], [50.5, 8681.0], [50.6, 8682.0], [50.7, 8683.0], [50.8, 8685.0], [50.9, 8689.0], [51.0, 8691.0], [51.1, 8695.0], [51.2, 8702.0], [51.3, 8707.0], [51.4, 8714.0], [51.5, 8722.0], [51.6, 8724.0], [51.7, 8727.0], [51.8, 8735.0], [51.9, 8740.0], [52.0, 8742.0], [52.1, 8747.0], [52.2, 8751.0], [52.3, 8754.0], [52.4, 8757.0], [52.5, 8761.0], [52.6, 8763.0], [52.7, 8767.0], [52.8, 8768.0], [52.9, 8769.0], [53.0, 8770.0], [53.1, 8771.0], [53.2, 8779.0], [53.3, 8782.0], [53.4, 8787.0], [53.5, 8791.0], [53.6, 8795.0], [53.7, 8796.0], [53.8, 8800.0], [53.9, 8801.0], [54.0, 8803.0], [54.1, 8806.0], [54.2, 8809.0], [54.3, 8812.0], [54.4, 8814.0], [54.5, 8818.0], [54.6, 8820.0], [54.7, 8822.0], [54.8, 8823.0], [54.9, 8826.0], [55.0, 8828.0], [55.1, 8829.0], [55.2, 8830.0], [55.3, 8830.0], [55.4, 8832.0], [55.5, 8836.0], [55.6, 8838.0], [55.7, 8839.0], [55.8, 8841.0], [55.9, 8847.0], [56.0, 8857.0], [56.1, 8861.0], [56.2, 8865.0], [56.3, 8871.0], [56.4, 8873.0], [56.5, 8875.0], [56.6, 8876.0], [56.7, 8879.0], [56.8, 8881.0], [56.9, 8883.0], [57.0, 8885.0], [57.1, 8887.0], [57.2, 8888.0], [57.3, 8890.0], [57.4, 8892.0], [57.5, 8895.0], [57.6, 8895.0], [57.7, 8896.0], [57.8, 8896.0], [57.9, 8897.0], [58.0, 8898.0], [58.1, 8899.0], [58.2, 8900.0], [58.3, 8901.0], [58.4, 8901.0], [58.5, 8902.0], [58.6, 8902.0], [58.7, 8903.0], [58.8, 8903.0], [58.9, 8905.0], [59.0, 8906.0], [59.1, 8907.0], [59.2, 8912.0], [59.3, 8913.0], [59.4, 8914.0], [59.5, 8915.0], [59.6, 8916.0], [59.7, 8919.0], [59.8, 8928.0], [59.9, 8930.0], [60.0, 8934.0], [60.1, 8940.0], [60.2, 8946.0], [60.3, 8951.0], [60.4, 8953.0], [60.5, 8956.0], [60.6, 8968.0], [60.7, 8970.0], [60.8, 8971.0], [60.9, 8972.0], [61.0, 8973.0], [61.1, 8979.0], [61.2, 8982.0], [61.3, 8983.0], [61.4, 8985.0], [61.5, 8985.0], [61.6, 8986.0], [61.7, 8988.0], [61.8, 8990.0], [61.9, 8991.0], [62.0, 8991.0], [62.1, 8992.0], [62.2, 8993.0], [62.3, 8994.0], [62.4, 8994.0], [62.5, 8995.0], [62.6, 8996.0], [62.7, 8997.0], [62.8, 8998.0], [62.9, 8999.0], [63.0, 8999.0], [63.1, 9000.0], [63.2, 9000.0], [63.3, 9001.0], [63.4, 9002.0], [63.5, 9002.0], [63.6, 9003.0], [63.7, 9004.0], [63.8, 9004.0], [63.9, 9005.0], [64.0, 9007.0], [64.1, 9010.0], [64.2, 9011.0], [64.3, 9016.0], [64.4, 9018.0], [64.5, 9019.0], [64.6, 9020.0], [64.7, 9021.0], [64.8, 9024.0], [64.9, 9028.0], [65.0, 9033.0], [65.1, 9036.0], [65.2, 9038.0], [65.3, 9040.0], [65.4, 9045.0], [65.5, 9048.0], [65.6, 9054.0], [65.7, 9056.0], [65.8, 9057.0], [65.9, 9058.0], [66.0, 9059.0], [66.1, 9060.0], [66.2, 9062.0], [66.3, 9064.0], [66.4, 9065.0], [66.5, 9066.0], [66.6, 9067.0], [66.7, 9068.0], [66.8, 9073.0], [66.9, 9074.0], [67.0, 9074.0], [67.1, 9075.0], [67.2, 9076.0], [67.3, 9077.0], [67.4, 9079.0], [67.5, 9080.0], [67.6, 9081.0], [67.7, 9081.0], [67.8, 9082.0], [67.9, 9082.0], [68.0, 9083.0], [68.1, 9084.0], [68.2, 9084.0], [68.3, 9085.0], [68.4, 9086.0], [68.5, 9088.0], [68.6, 9089.0], [68.7, 9090.0], [68.8, 9091.0], [68.9, 9094.0], [69.0, 9096.0], [69.1, 9097.0], [69.2, 9099.0], [69.3, 9100.0], [69.4, 9102.0], [69.5, 9104.0], [69.6, 9106.0], [69.7, 9109.0], [69.8, 9111.0], [69.9, 9114.0], [70.0, 9115.0], [70.1, 9116.0], [70.2, 9117.0], [70.3, 9121.0], [70.4, 9124.0], [70.5, 9128.0], [70.6, 9130.0], [70.7, 9132.0], [70.8, 9132.0], [70.9, 9133.0], [71.0, 9135.0], [71.1, 9136.0], [71.2, 9136.0], [71.3, 9137.0], [71.4, 9138.0], [71.5, 9141.0], [71.6, 9143.0], [71.7, 9145.0], [71.8, 9145.0], [71.9, 9146.0], [72.0, 9147.0], [72.1, 9147.0], [72.2, 9148.0], [72.3, 9149.0], [72.4, 9150.0], [72.5, 9150.0], [72.6, 9152.0], [72.7, 9153.0], [72.8, 9155.0], [72.9, 9159.0], [73.0, 9162.0], [73.1, 9165.0], [73.2, 9170.0], [73.3, 9172.0], [73.4, 9177.0], [73.5, 9182.0], [73.6, 9183.0], [73.7, 9185.0], [73.8, 9189.0], [73.9, 9194.0], [74.0, 9196.0], [74.1, 9203.0], [74.2, 9205.0], [74.3, 9209.0], [74.4, 9219.0], [74.5, 9224.0], [74.6, 9227.0], [74.7, 9227.0], [74.8, 9228.0], [74.9, 9229.0], [75.0, 9230.0], [75.1, 9233.0], [75.2, 9234.0], [75.3, 9235.0], [75.4, 9236.0], [75.5, 9237.0], [75.6, 9238.0], [75.7, 9239.0], [75.8, 9240.0], [75.9, 9242.0], [76.0, 9252.0], [76.1, 9257.0], [76.2, 9261.0], [76.3, 9268.0], [76.4, 9271.0], [76.5, 9277.0], [76.6, 9283.0], [76.7, 9286.0], [76.8, 9294.0], [76.9, 9300.0], [77.0, 9308.0], [77.1, 9312.0], [77.2, 9314.0], [77.3, 9331.0], [77.4, 9346.0], [77.5, 9353.0], [77.6, 9365.0], [77.7, 9369.0], [77.8, 9372.0], [77.9, 9374.0], [78.0, 9375.0], [78.1, 9376.0], [78.2, 9377.0], [78.3, 9378.0], [78.4, 9379.0], [78.5, 9380.0], [78.6, 9381.0], [78.7, 9381.0], [78.8, 9382.0], [78.9, 9383.0], [79.0, 9385.0], [79.1, 9386.0], [79.2, 9388.0], [79.3, 9389.0], [79.4, 9390.0], [79.5, 9391.0], [79.6, 9392.0], [79.7, 9393.0], [79.8, 9394.0], [79.9, 9394.0], [80.0, 9396.0], [80.1, 9397.0], [80.2, 9398.0], [80.3, 9398.0], [80.4, 9399.0], [80.5, 9400.0], [80.6, 9401.0], [80.7, 9402.0], [80.8, 9403.0], [80.9, 9403.0], [81.0, 9404.0], [81.1, 9405.0], [81.2, 9406.0], [81.3, 9434.0], [81.4, 9436.0], [81.5, 9437.0], [81.6, 9438.0], [81.7, 9439.0], [81.8, 9441.0], [81.9, 9441.0], [82.0, 9442.0], [82.1, 9442.0], [82.2, 9443.0], [82.3, 9444.0], [82.4, 9446.0], [82.5, 9449.0], [82.6, 9450.0], [82.7, 9451.0], [82.8, 9453.0], [82.9, 9453.0], [83.0, 9454.0], [83.1, 9455.0], [83.2, 9455.0], [83.3, 9456.0], [83.4, 9456.0], [83.5, 9457.0], [83.6, 9457.0], [83.7, 9458.0], [83.8, 9459.0], [83.9, 9460.0], [84.0, 9460.0], [84.1, 9461.0], [84.2, 9461.0], [84.3, 9463.0], [84.4, 9465.0], [84.5, 9468.0], [84.6, 9469.0], [84.7, 9470.0], [84.8, 9472.0], [84.9, 9473.0], [85.0, 9475.0], [85.1, 9477.0], [85.2, 9478.0], [85.3, 9480.0], [85.4, 9481.0], [85.5, 9483.0], [85.6, 9488.0], [85.7, 9490.0], [85.8, 9492.0], [85.9, 9495.0], [86.0, 9528.0], [86.1, 9531.0], [86.2, 9532.0], [86.3, 9535.0], [86.4, 9537.0], [86.5, 9540.0], [86.6, 9541.0], [86.7, 9543.0], [86.8, 9544.0], [86.9, 9549.0], [87.0, 9551.0], [87.1, 9553.0], [87.2, 9560.0], [87.3, 9562.0], [87.4, 9564.0], [87.5, 9578.0], [87.6, 9626.0], [87.7, 9655.0], [87.8, 9662.0], [87.9, 9677.0], [88.0, 9686.0], [88.1, 9695.0], [88.2, 9712.0], [88.3, 9722.0], [88.4, 9726.0], [88.5, 9738.0], [88.6, 9749.0], [88.7, 9754.0], [88.8, 9758.0], [88.9, 9771.0], [89.0, 9775.0], [89.1, 9788.0], [89.2, 9796.0], [89.3, 9808.0], [89.4, 9812.0], [89.5, 9821.0], [89.6, 9829.0], [89.7, 9831.0], [89.8, 9837.0], [89.9, 9844.0], [90.0, 9846.0], [90.1, 9848.0], [90.2, 9860.0], [90.3, 9862.0], [90.4, 9867.0], [90.5, 9880.0], [90.6, 9887.0], [90.7, 9894.0], [90.8, 9899.0], [90.9, 9903.0], [91.0, 9913.0], [91.1, 9917.0], [91.2, 9920.0], [91.3, 9922.0], [91.4, 9923.0], [91.5, 9924.0], [91.6, 9926.0], [91.7, 9929.0], [91.8, 9936.0], [91.9, 9943.0], [92.0, 9948.0], [92.1, 9961.0], [92.2, 9964.0], [92.3, 9980.0], [92.4, 9981.0], [92.5, 9997.0], [92.6, 10006.0], [92.7, 10023.0], [92.8, 10037.0], [92.9, 10048.0], [93.0, 10061.0], [93.1, 10081.0], [93.2, 10103.0], [93.3, 10129.0], [93.4, 10158.0], [93.5, 10178.0], [93.6, 10212.0], [93.7, 10240.0], [93.8, 10271.0], [93.9, 10305.0], [94.0, 10372.0], [94.1, 10414.0], [94.2, 10417.0], [94.3, 10424.0], [94.4, 10441.0], [94.5, 10475.0], [94.6, 10493.0], [94.7, 10529.0], [94.8, 10561.0], [94.9, 10586.0], [95.0, 10627.0], [95.1, 10682.0], [95.2, 10683.0], [95.3, 10684.0], [95.4, 10685.0], [95.5, 10689.0], [95.6, 10690.0], [95.7, 10691.0], [95.8, 10692.0], [95.9, 10695.0], [96.0, 10697.0], [96.1, 10699.0], [96.2, 10775.0], [96.3, 10806.0], [96.4, 10939.0], [96.5, 10956.0], [96.6, 10971.0], [96.7, 10982.0], [96.8, 11003.0], [96.9, 11054.0], [97.0, 11056.0], [97.1, 11071.0], [97.2, 11073.0], [97.3, 11095.0], [97.4, 11127.0], [97.5, 11178.0], [97.6, 11210.0], [97.7, 11247.0], [97.8, 11264.0], [97.9, 11276.0], [98.0, 11279.0], [98.1, 11295.0], [98.2, 11333.0], [98.3, 11335.0], [98.4, 11402.0], [98.5, 11440.0], [98.6, 11496.0], [98.7, 11588.0], [98.8, 11591.0], [98.9, 11774.0], [99.0, 11784.0], [99.1, 11792.0], [99.2, 11894.0], [99.3, 13028.0], [99.4, 13030.0], [99.5, 13031.0], [99.6, 13033.0], [99.7, 13034.0], [99.8, 13036.0], [99.9, 13037.0], [100.0, 17382.0]], "isOverall": false, "label": "MainPage /login HTTP Request", "isController": false}, {"data": [[0.0, 58.0], [0.1, 202.0], [0.2, 221.0], [0.3, 229.0], [0.4, 237.0], [0.5, 271.0], [0.6, 297.0], [0.7, 331.0], [0.8, 373.0], [0.9, 431.0], [1.0, 519.0], [1.1, 530.0], [1.2, 557.0], [1.3, 623.0], [1.4, 649.0], [1.5, 655.0], [1.6, 668.0], [1.7, 716.0], [1.8, 745.0], [1.9, 776.0], [2.0, 802.0], [2.1, 854.0], [2.2, 913.0], [2.3, 1006.0], [2.4, 1015.0], [2.5, 1073.0], [2.6, 1077.0], [2.7, 1078.0], [2.8, 1081.0], [2.9, 1107.0], [3.0, 1124.0], [3.1, 1145.0], [3.2, 1176.0], [3.3, 1212.0], [3.4, 1221.0], [3.5, 1287.0], [3.6, 1346.0], [3.7, 1387.0], [3.8, 1443.0], [3.9, 1446.0], [4.0, 1453.0], [4.1, 1508.0], [4.2, 1558.0], [4.3, 1567.0], [4.4, 1576.0], [4.5, 1634.0], [4.6, 1683.0], [4.7, 1684.0], [4.8, 1689.0], [4.9, 1716.0], [5.0, 1770.0], [5.1, 1885.0], [5.2, 1916.0], [5.3, 1947.0], [5.4, 1988.0], [5.5, 2008.0], [5.6, 2009.0], [5.7, 2009.0], [5.8, 2010.0], [5.9, 2011.0], [6.0, 2013.0], [6.1, 2014.0], [6.2, 2015.0], [6.3, 2029.0], [6.4, 2081.0], [6.5, 2128.0], [6.6, 2206.0], [6.7, 2273.0], [6.8, 2274.0], [6.9, 2275.0], [7.0, 2281.0], [7.1, 2282.0], [7.2, 2351.0], [7.3, 2399.0], [7.4, 2456.0], [7.5, 2496.0], [7.6, 2545.0], [7.7, 2547.0], [7.8, 2549.0], [7.9, 2554.0], [8.0, 2597.0], [8.1, 2651.0], [8.2, 2702.0], [8.3, 2737.0], [8.4, 2738.0], [8.5, 2739.0], [8.6, 2739.0], [8.7, 2740.0], [8.8, 2742.0], [8.9, 2743.0], [9.0, 2743.0], [9.1, 2744.0], [9.2, 2744.0], [9.3, 2746.0], [9.4, 2749.0], [9.5, 2755.0], [9.6, 2789.0], [9.7, 2836.0], [9.8, 2914.0], [9.9, 2968.0], [10.0, 3042.0], [10.1, 3043.0], [10.2, 3045.0], [10.3, 3048.0], [10.4, 3176.0], [10.5, 3229.0], [10.6, 3270.0], [10.7, 3284.0], [10.8, 3300.0], [10.9, 3304.0], [11.0, 3305.0], [11.1, 3318.0], [11.2, 3327.0], [11.3, 3329.0], [11.4, 3330.0], [11.5, 3332.0], [11.6, 3335.0], [11.7, 3335.0], [11.8, 3336.0], [11.9, 3336.0], [12.0, 3337.0], [12.1, 3366.0], [12.2, 3367.0], [12.3, 3443.0], [12.4, 3504.0], [12.5, 3505.0], [12.6, 3506.0], [12.7, 3509.0], [12.8, 3509.0], [12.9, 3526.0], [13.0, 3630.0], [13.1, 3720.0], [13.2, 3840.0], [13.3, 3848.0], [13.4, 3849.0], [13.5, 3850.0], [13.6, 3852.0], [13.7, 3854.0], [13.8, 3855.0], [13.9, 3857.0], [14.0, 3858.0], [14.1, 3859.0], [14.2, 3861.0], [14.3, 3862.0], [14.4, 3863.0], [14.5, 3866.0], [14.6, 3900.0], [14.7, 3915.0], [14.8, 3919.0], [14.9, 3920.0], [15.0, 3921.0], [15.1, 3923.0], [15.2, 3924.0], [15.3, 3927.0], [15.4, 3938.0], [15.5, 3942.0], [15.6, 3951.0], [15.7, 3953.0], [15.8, 3954.0], [15.9, 3969.0], [16.0, 3972.0], [16.1, 3974.0], [16.2, 3981.0], [16.3, 3981.0], [16.4, 3982.0], [16.5, 3983.0], [16.6, 3983.0], [16.7, 3984.0], [16.8, 3987.0], [16.9, 3987.0], [17.0, 3988.0], [17.1, 3989.0], [17.2, 3996.0], [17.3, 4020.0], [17.4, 4052.0], [17.5, 4072.0], [17.6, 4127.0], [17.7, 4159.0], [17.8, 4175.0], [17.9, 4176.0], [18.0, 4179.0], [18.1, 4179.0], [18.2, 4181.0], [18.3, 4210.0], [18.4, 4211.0], [18.5, 4212.0], [18.6, 4213.0], [18.7, 4213.0], [18.8, 4213.0], [18.9, 4216.0], [19.0, 4216.0], [19.1, 4228.0], [19.2, 4256.0], [19.3, 4285.0], [19.4, 4304.0], [19.5, 4324.0], [19.6, 4361.0], [19.7, 4369.0], [19.8, 4371.0], [19.9, 4372.0], [20.0, 4373.0], [20.1, 4374.0], [20.2, 4375.0], [20.3, 4376.0], [20.4, 4377.0], [20.5, 4378.0], [20.6, 4382.0], [20.7, 4384.0], [20.8, 4387.0], [20.9, 4391.0], [21.0, 4392.0], [21.1, 4395.0], [21.2, 4420.0], [21.3, 4431.0], [21.4, 4442.0], [21.5, 4457.0], [21.6, 4483.0], [21.7, 4494.0], [21.8, 4519.0], [21.9, 4542.0], [22.0, 4559.0], [22.1, 4560.0], [22.2, 4563.0], [22.3, 4569.0], [22.4, 4602.0], [22.5, 4626.0], [22.6, 4629.0], [22.7, 4631.0], [22.8, 4632.0], [22.9, 4633.0], [23.0, 4634.0], [23.1, 4635.0], [23.2, 4636.0], [23.3, 4638.0], [23.4, 4647.0], [23.5, 4648.0], [23.6, 4649.0], [23.7, 4651.0], [23.8, 4652.0], [23.9, 4654.0], [24.0, 4656.0], [24.1, 4657.0], [24.2, 4662.0], [24.3, 4672.0], [24.4, 4690.0], [24.5, 4704.0], [24.6, 4719.0], [24.7, 4735.0], [24.8, 4765.0], [24.9, 4787.0], [25.0, 4792.0], [25.1, 4793.0], [25.2, 4794.0], [25.3, 4796.0], [25.4, 4796.0], [25.5, 4797.0], [25.6, 4799.0], [25.7, 4800.0], [25.8, 4808.0], [25.9, 4849.0], [26.0, 4853.0], [26.1, 4854.0], [26.2, 4855.0], [26.3, 4856.0], [26.4, 4856.0], [26.5, 4860.0], [26.6, 4862.0], [26.7, 4913.0], [26.8, 4950.0], [26.9, 4956.0], [27.0, 4957.0], [27.1, 4961.0], [27.2, 4962.0], [27.3, 4962.0], [27.4, 4963.0], [27.5, 4963.0], [27.6, 4964.0], [27.7, 4964.0], [27.8, 4968.0], [27.9, 4969.0], [28.0, 4969.0], [28.1, 4970.0], [28.2, 4971.0], [28.3, 4974.0], [28.4, 4977.0], [28.5, 4982.0], [28.6, 4997.0], [28.7, 5004.0], [28.8, 5011.0], [28.9, 5017.0], [29.0, 5030.0], [29.1, 5058.0], [29.2, 5071.0], [29.3, 5071.0], [29.4, 5073.0], [29.5, 5075.0], [29.6, 5076.0], [29.7, 5077.0], [29.8, 5080.0], [29.9, 5081.0], [30.0, 5082.0], [30.1, 5087.0], [30.2, 5100.0], [30.3, 5101.0], [30.4, 5102.0], [30.5, 5102.0], [30.6, 5103.0], [30.7, 5104.0], [30.8, 5105.0], [30.9, 5109.0], [31.0, 5110.0], [31.1, 5114.0], [31.2, 5116.0], [31.3, 5118.0], [31.4, 5130.0], [31.5, 5140.0], [31.6, 5147.0], [31.7, 5151.0], [31.8, 5152.0], [31.9, 5152.0], [32.0, 5153.0], [32.1, 5154.0], [32.2, 5155.0], [32.3, 5156.0], [32.4, 5158.0], [32.5, 5162.0], [32.6, 5167.0], [32.7, 5177.0], [32.8, 5179.0], [32.9, 5182.0], [33.0, 5186.0], [33.1, 5190.0], [33.2, 5194.0], [33.3, 5198.0], [33.4, 5200.0], [33.5, 5202.0], [33.6, 5203.0], [33.7, 5203.0], [33.8, 5204.0], [33.9, 5204.0], [34.0, 5205.0], [34.1, 5205.0], [34.2, 5206.0], [34.3, 5210.0], [34.4, 5215.0], [34.5, 5222.0], [34.6, 5227.0], [34.7, 5229.0], [34.8, 5232.0], [34.9, 5233.0], [35.0, 5235.0], [35.1, 5240.0], [35.2, 5244.0], [35.3, 5245.0], [35.4, 5248.0], [35.5, 5256.0], [35.6, 5261.0], [35.7, 5264.0], [35.8, 5269.0], [35.9, 5270.0], [36.0, 5270.0], [36.1, 5270.0], [36.2, 5271.0], [36.3, 5274.0], [36.4, 5275.0], [36.5, 5276.0], [36.6, 5276.0], [36.7, 5277.0], [36.8, 5280.0], [36.9, 5282.0], [37.0, 5284.0], [37.1, 5286.0], [37.2, 5287.0], [37.3, 5287.0], [37.4, 5289.0], [37.5, 5290.0], [37.6, 5291.0], [37.7, 5291.0], [37.8, 5292.0], [37.9, 5292.0], [38.0, 5293.0], [38.1, 5296.0], [38.2, 5296.0], [38.3, 5297.0], [38.4, 5297.0], [38.5, 5299.0], [38.6, 5299.0], [38.7, 5300.0], [38.8, 5301.0], [38.9, 5301.0], [39.0, 5301.0], [39.1, 5302.0], [39.2, 5302.0], [39.3, 5303.0], [39.4, 5304.0], [39.5, 5306.0], [39.6, 5307.0], [39.7, 5308.0], [39.8, 5309.0], [39.9, 5311.0], [40.0, 5312.0], [40.1, 5313.0], [40.2, 5317.0], [40.3, 5318.0], [40.4, 5324.0], [40.5, 5333.0], [40.6, 5338.0], [40.7, 5344.0], [40.8, 5355.0], [40.9, 5356.0], [41.0, 5359.0], [41.1, 5360.0], [41.2, 5361.0], [41.3, 5361.0], [41.4, 5362.0], [41.5, 5362.0], [41.6, 5362.0], [41.7, 5363.0], [41.8, 5363.0], [41.9, 5364.0], [42.0, 5365.0], [42.1, 5366.0], [42.2, 5369.0], [42.3, 5374.0], [42.4, 5378.0], [42.5, 5389.0], [42.6, 5396.0], [42.7, 5401.0], [42.8, 5416.0], [42.9, 5417.0], [43.0, 5432.0], [43.1, 5438.0], [43.2, 5448.0], [43.3, 5468.0], [43.4, 5478.0], [43.5, 5494.0], [43.6, 5495.0], [43.7, 5496.0], [43.8, 5496.0], [43.9, 5497.0], [44.0, 5497.0], [44.1, 5497.0], [44.2, 5498.0], [44.3, 5503.0], [44.4, 5504.0], [44.5, 5509.0], [44.6, 5517.0], [44.7, 5529.0], [44.8, 5539.0], [44.9, 5547.0], [45.0, 5569.0], [45.1, 5596.0], [45.2, 5613.0], [45.3, 5614.0], [45.4, 5617.0], [45.5, 5627.0], [45.6, 5651.0], [45.7, 5665.0], [45.8, 5666.0], [45.9, 5668.0], [46.0, 5670.0], [46.1, 5670.0], [46.2, 5671.0], [46.3, 5671.0], [46.4, 5672.0], [46.5, 5672.0], [46.6, 5672.0], [46.7, 5673.0], [46.8, 5675.0], [46.9, 5676.0], [47.0, 5682.0], [47.1, 5688.0], [47.2, 5692.0], [47.3, 5700.0], [47.4, 5703.0], [47.5, 5704.0], [47.6, 5706.0], [47.7, 5717.0], [47.8, 5737.0], [47.9, 5748.0], [48.0, 5761.0], [48.1, 5762.0], [48.2, 5763.0], [48.3, 5764.0], [48.4, 5765.0], [48.5, 5769.0], [48.6, 5770.0], [48.7, 5771.0], [48.8, 5775.0], [48.9, 5780.0], [49.0, 5786.0], [49.1, 5796.0], [49.2, 5797.0], [49.3, 5801.0], [49.4, 5803.0], [49.5, 5804.0], [49.6, 5806.0], [49.7, 5829.0], [49.8, 5862.0], [49.9, 5863.0], [50.0, 5866.0], [50.1, 5867.0], [50.2, 5867.0], [50.3, 5868.0], [50.4, 5875.0], [50.5, 5959.0], [50.6, 5990.0], [50.7, 5991.0], [50.8, 5993.0], [50.9, 5994.0], [51.0, 5995.0], [51.1, 5995.0], [51.2, 5996.0], [51.3, 5997.0], [51.4, 5999.0], [51.5, 6015.0], [51.6, 6017.0], [51.7, 6018.0], [51.8, 6018.0], [51.9, 6019.0], [52.0, 6019.0], [52.1, 6020.0], [52.2, 6020.0], [52.3, 6021.0], [52.4, 6021.0], [52.5, 6022.0], [52.6, 6022.0], [52.7, 6025.0], [52.8, 6103.0], [52.9, 6117.0], [53.0, 6122.0], [53.1, 6122.0], [53.2, 6123.0], [53.3, 6124.0], [53.4, 6125.0], [53.5, 6126.0], [53.6, 6127.0], [53.7, 6131.0], [53.8, 6132.0], [53.9, 6133.0], [54.0, 6165.0], [54.1, 6166.0], [54.2, 6168.0], [54.3, 6169.0], [54.4, 6170.0], [54.5, 6171.0], [54.6, 6171.0], [54.7, 6171.0], [54.8, 6172.0], [54.9, 6173.0], [55.0, 6173.0], [55.1, 6176.0], [55.2, 6176.0], [55.3, 6176.0], [55.4, 6177.0], [55.5, 6177.0], [55.6, 6178.0], [55.7, 6200.0], [55.8, 6201.0], [55.9, 6203.0], [56.0, 6205.0], [56.1, 6206.0], [56.2, 6207.0], [56.3, 6208.0], [56.4, 6213.0], [56.5, 6215.0], [56.6, 6217.0], [56.7, 6218.0], [56.8, 6223.0], [56.9, 6224.0], [57.0, 6226.0], [57.1, 6226.0], [57.2, 6226.0], [57.3, 6227.0], [57.4, 6227.0], [57.5, 6228.0], [57.6, 6228.0], [57.7, 6230.0], [57.8, 6231.0], [57.9, 6231.0], [58.0, 6232.0], [58.1, 6232.0], [58.2, 6234.0], [58.3, 6239.0], [58.4, 6242.0], [58.5, 6242.0], [58.6, 6243.0], [58.7, 6247.0], [58.8, 6252.0], [58.9, 6259.0], [59.0, 6266.0], [59.1, 6269.0], [59.2, 6270.0], [59.3, 6272.0], [59.4, 6275.0], [59.5, 6277.0], [59.6, 6283.0], [59.7, 6286.0], [59.8, 6287.0], [59.9, 6289.0], [60.0, 6290.0], [60.1, 6293.0], [60.2, 6298.0], [60.3, 6303.0], [60.4, 6303.0], [60.5, 6307.0], [60.6, 6309.0], [60.7, 6310.0], [60.8, 6310.0], [60.9, 6311.0], [61.0, 6313.0], [61.1, 6313.0], [61.2, 6314.0], [61.3, 6314.0], [61.4, 6315.0], [61.5, 6315.0], [61.6, 6316.0], [61.7, 6316.0], [61.8, 6317.0], [61.9, 6317.0], [62.0, 6319.0], [62.1, 6319.0], [62.2, 6320.0], [62.3, 6320.0], [62.4, 6321.0], [62.5, 6321.0], [62.6, 6322.0], [62.7, 6324.0], [62.8, 6326.0], [62.9, 6327.0], [63.0, 6329.0], [63.1, 6330.0], [63.2, 6333.0], [63.3, 6335.0], [63.4, 6335.0], [63.5, 6336.0], [63.6, 6337.0], [63.7, 6337.0], [63.8, 6338.0], [63.9, 6339.0], [64.0, 6343.0], [64.1, 6351.0], [64.2, 6352.0], [64.3, 6353.0], [64.4, 6354.0], [64.5, 6355.0], [64.6, 6355.0], [64.7, 6355.0], [64.8, 6356.0], [64.9, 6356.0], [65.0, 6357.0], [65.1, 6358.0], [65.2, 6359.0], [65.3, 6359.0], [65.4, 6359.0], [65.5, 6360.0], [65.6, 6360.0], [65.7, 6364.0], [65.8, 6364.0], [65.9, 6365.0], [66.0, 6366.0], [66.1, 6367.0], [66.2, 6369.0], [66.3, 6370.0], [66.4, 6371.0], [66.5, 6374.0], [66.6, 6375.0], [66.7, 6376.0], [66.8, 6376.0], [66.9, 6377.0], [67.0, 6377.0], [67.1, 6378.0], [67.2, 6379.0], [67.3, 6383.0], [67.4, 6384.0], [67.5, 6388.0], [67.6, 6401.0], [67.7, 6409.0], [67.8, 6418.0], [67.9, 6422.0], [68.0, 6425.0], [68.1, 6432.0], [68.2, 6433.0], [68.3, 6434.0], [68.4, 6435.0], [68.5, 6435.0], [68.6, 6436.0], [68.7, 6436.0], [68.8, 6438.0], [68.9, 6438.0], [69.0, 6439.0], [69.1, 6439.0], [69.2, 6440.0], [69.3, 6440.0], [69.4, 6441.0], [69.5, 6441.0], [69.6, 6445.0], [69.7, 6450.0], [69.8, 6454.0], [69.9, 6454.0], [70.0, 6457.0], [70.1, 6460.0], [70.2, 6461.0], [70.3, 6462.0], [70.4, 6463.0], [70.5, 6464.0], [70.6, 6464.0], [70.7, 6465.0], [70.8, 6468.0], [70.9, 6471.0], [71.0, 6473.0], [71.1, 6482.0], [71.2, 6494.0], [71.3, 6496.0], [71.4, 6499.0], [71.5, 6502.0], [71.6, 6503.0], [71.7, 6504.0], [71.8, 6505.0], [71.9, 6506.0], [72.0, 6508.0], [72.1, 6508.0], [72.2, 6509.0], [72.3, 6513.0], [72.4, 6514.0], [72.5, 6514.0], [72.6, 6515.0], [72.7, 6516.0], [72.8, 6516.0], [72.9, 6517.0], [73.0, 6517.0], [73.1, 6517.0], [73.2, 6518.0], [73.3, 6519.0], [73.4, 6519.0], [73.5, 6521.0], [73.6, 6521.0], [73.7, 6522.0], [73.8, 6522.0], [73.9, 6522.0], [74.0, 6523.0], [74.1, 6523.0], [74.2, 6529.0], [74.3, 6531.0], [74.4, 6531.0], [74.5, 6532.0], [74.6, 6533.0], [74.7, 6535.0], [74.8, 6536.0], [74.9, 6536.0], [75.0, 6537.0], [75.1, 6537.0], [75.2, 6537.0], [75.3, 6539.0], [75.4, 6540.0], [75.5, 6540.0], [75.6, 6542.0], [75.7, 6547.0], [75.8, 6575.0], [75.9, 6614.0], [76.0, 6646.0], [76.1, 6661.0], [76.2, 6667.0], [76.3, 6672.0], [76.4, 6673.0], [76.5, 6674.0], [76.6, 6675.0], [76.7, 6678.0], [76.8, 6687.0], [76.9, 6694.0], [77.0, 6699.0], [77.1, 6707.0], [77.2, 6715.0], [77.3, 6722.0], [77.4, 6732.0], [77.5, 6740.0], [77.6, 6750.0], [77.7, 6751.0], [77.8, 6752.0], [77.9, 6755.0], [78.0, 6756.0], [78.1, 6757.0], [78.2, 6758.0], [78.3, 6758.0], [78.4, 6759.0], [78.5, 6760.0], [78.6, 6761.0], [78.7, 6762.0], [78.8, 6763.0], [78.9, 6764.0], [79.0, 6765.0], [79.1, 6768.0], [79.2, 6770.0], [79.3, 6770.0], [79.4, 6771.0], [79.5, 6772.0], [79.6, 6774.0], [79.7, 6775.0], [79.8, 6775.0], [79.9, 6779.0], [80.0, 6783.0], [80.1, 6786.0], [80.2, 6787.0], [80.3, 6787.0], [80.4, 6787.0], [80.5, 6788.0], [80.6, 6789.0], [80.7, 6789.0], [80.8, 6790.0], [80.9, 6790.0], [81.0, 6791.0], [81.1, 6791.0], [81.2, 6792.0], [81.3, 6792.0], [81.4, 6793.0], [81.5, 6795.0], [81.6, 6797.0], [81.7, 6799.0], [81.8, 6806.0], [81.9, 6822.0], [82.0, 6839.0], [82.1, 6853.0], [82.2, 6869.0], [82.3, 6894.0], [82.4, 6895.0], [82.5, 6899.0], [82.6, 6901.0], [82.7, 6901.0], [82.8, 6902.0], [82.9, 6902.0], [83.0, 6913.0], [83.1, 6942.0], [83.2, 6944.0], [83.3, 6947.0], [83.4, 6948.0], [83.5, 6949.0], [83.6, 6954.0], [83.7, 6962.0], [83.8, 6966.0], [83.9, 6971.0], [84.0, 6973.0], [84.1, 6976.0], [84.2, 6977.0], [84.3, 6977.0], [84.4, 6978.0], [84.5, 6978.0], [84.6, 6979.0], [84.7, 6979.0], [84.8, 6979.0], [84.9, 6980.0], [85.0, 6980.0], [85.1, 6981.0], [85.2, 6982.0], [85.3, 6982.0], [85.4, 6983.0], [85.5, 6983.0], [85.6, 6983.0], [85.7, 6984.0], [85.8, 6984.0], [85.9, 6984.0], [86.0, 6985.0], [86.1, 6987.0], [86.2, 7000.0], [86.3, 7024.0], [86.4, 7045.0], [86.5, 7067.0], [86.6, 7094.0], [86.7, 7112.0], [86.8, 7128.0], [86.9, 7162.0], [87.0, 7188.0], [87.1, 7201.0], [87.2, 7202.0], [87.3, 7203.0], [87.4, 7204.0], [87.5, 7204.0], [87.6, 7208.0], [87.7, 7209.0], [87.8, 7210.0], [87.9, 7214.0], [88.0, 7226.0], [88.1, 7244.0], [88.2, 7246.0], [88.3, 7247.0], [88.4, 7247.0], [88.5, 7248.0], [88.6, 7252.0], [88.7, 7253.0], [88.8, 7254.0], [88.9, 7256.0], [89.0, 7267.0], [89.1, 7268.0], [89.2, 7269.0], [89.3, 7272.0], [89.4, 7273.0], [89.5, 7288.0], [89.6, 7295.0], [89.7, 7317.0], [89.8, 7318.0], [89.9, 7322.0], [90.0, 7322.0], [90.1, 7323.0], [90.2, 7323.0], [90.3, 7324.0], [90.4, 7324.0], [90.5, 7325.0], [90.6, 7326.0], [90.7, 7326.0], [90.8, 7327.0], [90.9, 7329.0], [91.0, 7330.0], [91.1, 7330.0], [91.2, 7330.0], [91.3, 7331.0], [91.4, 7338.0], [91.5, 7343.0], [91.6, 7347.0], [91.7, 7350.0], [91.8, 7350.0], [91.9, 7350.0], [92.0, 7351.0], [92.1, 7351.0], [92.2, 7351.0], [92.3, 7352.0], [92.4, 7352.0], [92.5, 7353.0], [92.6, 7354.0], [92.7, 7354.0], [92.8, 7355.0], [92.9, 7355.0], [93.0, 7355.0], [93.1, 7356.0], [93.2, 7356.0], [93.3, 7361.0], [93.4, 7366.0], [93.5, 7378.0], [93.6, 7384.0], [93.7, 7388.0], [93.8, 7396.0], [93.9, 7398.0], [94.0, 7414.0], [94.1, 7431.0], [94.2, 7446.0], [94.3, 7469.0], [94.4, 7469.0], [94.5, 7487.0], [94.6, 7637.0], [94.7, 7695.0], [94.8, 7710.0], [94.9, 7725.0], [95.0, 7733.0], [95.1, 7738.0], [95.2, 7745.0], [95.3, 7751.0], [95.4, 7762.0], [95.5, 7775.0], [95.6, 7786.0], [95.7, 7809.0], [95.8, 7836.0], [95.9, 7885.0], [96.0, 7906.0], [96.1, 8630.0], [96.2, 8874.0], [96.3, 8889.0], [96.4, 9490.0], [96.5, 9523.0], [96.6, 9562.0], [96.7, 9590.0], [96.8, 9644.0], [96.9, 9676.0], [97.0, 9695.0], [97.1, 9721.0], [97.2, 9747.0], [97.3, 9768.0], [97.4, 9786.0], [97.5, 9802.0], [97.6, 9831.0], [97.7, 9967.0], [97.8, 9991.0], [97.9, 10009.0], [98.0, 10026.0], [98.1, 10040.0], [98.2, 10055.0], [98.3, 10091.0], [98.4, 10108.0], [98.5, 10125.0], [98.6, 10155.0], [98.7, 10712.0], [98.8, 10756.0], [98.9, 10793.0], [99.0, 10826.0], [99.1, 10847.0], [99.2, 10863.0], [99.3, 10875.0], [99.4, 10893.0], [99.5, 10919.0], [99.6, 10956.0], [99.7, 10989.0], [99.8, 11023.0], [99.9, 11076.0], [100.0, 11111.0]], "isOverall": false, "label": "MainPage /rooms HTTP Request", "isController": false}, {"data": [[0.0, 30.0], [0.1, 126.0], [0.2, 186.0], [0.3, 221.0], [0.4, 237.0], [0.5, 244.0], [0.6, 249.0], [0.7, 339.0], [0.8, 397.0], [0.9, 513.0], [1.0, 519.0], [1.1, 544.0], [1.2, 556.0], [1.3, 586.0], [1.4, 606.0], [1.5, 658.0], [1.6, 675.0], [1.7, 711.0], [1.8, 752.0], [1.9, 775.0], [2.0, 937.0], [2.1, 997.0], [2.2, 1011.0], [2.3, 1013.0], [2.4, 1073.0], [2.5, 1077.0], [2.6, 1078.0], [2.7, 1159.0], [2.8, 1179.0], [2.9, 1201.0], [3.0, 1212.0], [3.1, 1236.0], [3.2, 1239.0], [3.3, 1240.0], [3.4, 1287.0], [3.5, 1337.0], [3.6, 1360.0], [3.7, 1431.0], [3.8, 1440.0], [3.9, 1497.0], [4.0, 1539.0], [4.1, 1584.0], [4.2, 1610.0], [4.3, 1675.0], [4.4, 1680.0], [4.5, 1700.0], [4.6, 1710.0], [4.7, 1725.0], [4.8, 1759.0], [4.9, 1791.0], [5.0, 1870.0], [5.1, 1876.0], [5.2, 1889.0], [5.3, 1907.0], [5.4, 1911.0], [5.5, 1931.0], [5.6, 1960.0], [5.7, 2012.0], [5.8, 2014.0], [5.9, 2015.0], [6.0, 2015.0], [6.1, 2016.0], [6.2, 2053.0], [6.3, 2057.0], [6.4, 2119.0], [6.5, 2151.0], [6.6, 2163.0], [6.7, 2184.0], [6.8, 2190.0], [6.9, 2198.0], [7.0, 2206.0], [7.1, 2273.0], [7.2, 2274.0], [7.3, 2277.0], [7.4, 2277.0], [7.5, 2278.0], [7.6, 2412.0], [7.7, 2443.0], [7.8, 2494.0], [7.9, 2532.0], [8.0, 2542.0], [8.1, 2557.0], [8.2, 2578.0], [8.3, 2708.0], [8.4, 2711.0], [8.5, 2739.0], [8.6, 2739.0], [8.7, 2740.0], [8.8, 2743.0], [8.9, 2743.0], [9.0, 2820.0], [9.1, 2822.0], [9.2, 2823.0], [9.3, 2823.0], [9.4, 2824.0], [9.5, 2826.0], [9.6, 2827.0], [9.7, 2953.0], [9.8, 3044.0], [9.9, 3047.0], [10.0, 3048.0], [10.1, 3049.0], [10.2, 3049.0], [10.3, 3052.0], [10.4, 3053.0], [10.5, 3176.0], [10.6, 3187.0], [10.7, 3190.0], [10.8, 3206.0], [10.9, 3303.0], [11.0, 3313.0], [11.1, 3319.0], [11.2, 3327.0], [11.3, 3336.0], [11.4, 3337.0], [11.5, 3337.0], [11.6, 3367.0], [11.7, 3368.0], [11.8, 3371.0], [11.9, 3442.0], [12.0, 3465.0], [12.1, 3467.0], [12.2, 3469.0], [12.3, 3471.0], [12.4, 3472.0], [12.5, 3476.0], [12.6, 3477.0], [12.7, 3479.0], [12.8, 3482.0], [12.9, 3484.0], [13.0, 3485.0], [13.1, 3488.0], [13.2, 3489.0], [13.3, 3493.0], [13.4, 3498.0], [13.5, 3503.0], [13.6, 3504.0], [13.7, 3507.0], [13.8, 3507.0], [13.9, 3529.0], [14.0, 3572.0], [14.1, 3576.0], [14.2, 3594.0], [14.3, 3599.0], [14.4, 3790.0], [14.5, 3799.0], [14.6, 3809.0], [14.7, 3842.0], [14.8, 3858.0], [14.9, 3864.0], [15.0, 3865.0], [15.1, 3866.0], [15.2, 3866.0], [15.3, 3866.0], [15.4, 3867.0], [15.5, 3869.0], [15.6, 3870.0], [15.7, 3876.0], [15.8, 3890.0], [15.9, 3919.0], [16.0, 3920.0], [16.1, 3921.0], [16.2, 3922.0], [16.3, 3922.0], [16.4, 3923.0], [16.5, 3923.0], [16.6, 3924.0], [16.7, 3924.0], [16.8, 3925.0], [16.9, 3925.0], [17.0, 3932.0], [17.1, 3939.0], [17.2, 3944.0], [17.3, 3946.0], [17.4, 3953.0], [17.5, 3958.0], [17.6, 3963.0], [17.7, 3964.0], [17.8, 3983.0], [17.9, 3984.0], [18.0, 3989.0], [18.1, 4000.0], [18.2, 4176.0], [18.3, 4179.0], [18.4, 4180.0], [18.5, 4182.0], [18.6, 4184.0], [18.7, 4192.0], [18.8, 4201.0], [18.9, 4201.0], [19.0, 4202.0], [19.1, 4204.0], [19.2, 4204.0], [19.3, 4205.0], [19.4, 4205.0], [19.5, 4278.0], [19.6, 4298.0], [19.7, 4300.0], [19.8, 4304.0], [19.9, 4314.0], [20.0, 4320.0], [20.1, 4353.0], [20.2, 4354.0], [20.3, 4356.0], [20.4, 4356.0], [20.5, 4358.0], [20.6, 4358.0], [20.7, 4363.0], [20.8, 4371.0], [20.9, 4372.0], [21.0, 4374.0], [21.1, 4377.0], [21.2, 4377.0], [21.3, 4378.0], [21.4, 4379.0], [21.5, 4380.0], [21.6, 4381.0], [21.7, 4382.0], [21.8, 4476.0], [21.9, 4494.0], [22.0, 4505.0], [22.1, 4508.0], [22.2, 4509.0], [22.3, 4509.0], [22.4, 4510.0], [22.5, 4510.0], [22.6, 4512.0], [22.7, 4540.0], [22.8, 4554.0], [22.9, 4560.0], [23.0, 4560.0], [23.1, 4561.0], [23.2, 4561.0], [23.3, 4561.0], [23.4, 4562.0], [23.5, 4562.0], [23.6, 4562.0], [23.7, 4562.0], [23.8, 4564.0], [23.9, 4565.0], [24.0, 4566.0], [24.1, 4566.0], [24.2, 4583.0], [24.3, 4613.0], [24.4, 4617.0], [24.5, 4626.0], [24.6, 4634.0], [24.7, 4634.0], [24.8, 4637.0], [24.9, 4638.0], [25.0, 4638.0], [25.1, 4639.0], [25.2, 4639.0], [25.3, 4640.0], [25.4, 4641.0], [25.5, 4641.0], [25.6, 4642.0], [25.7, 4643.0], [25.8, 4644.0], [25.9, 4645.0], [26.0, 4653.0], [26.1, 4655.0], [26.2, 4657.0], [26.3, 4657.0], [26.4, 4657.0], [26.5, 4657.0], [26.6, 4658.0], [26.7, 4658.0], [26.8, 4658.0], [26.9, 4659.0], [27.0, 4659.0], [27.1, 4660.0], [27.2, 4661.0], [27.3, 4662.0], [27.4, 4683.0], [27.5, 4700.0], [27.6, 4713.0], [27.7, 4741.0], [27.8, 4758.0], [27.9, 4775.0], [28.0, 4784.0], [28.1, 4784.0], [28.2, 4785.0], [28.3, 4785.0], [28.4, 4786.0], [28.5, 4786.0], [28.6, 4787.0], [28.7, 4789.0], [28.8, 4789.0], [28.9, 4790.0], [29.0, 4790.0], [29.1, 4792.0], [29.2, 4805.0], [29.3, 4815.0], [29.4, 4816.0], [29.5, 4816.0], [29.6, 4816.0], [29.7, 4817.0], [29.8, 4817.0], [29.9, 4819.0], [30.0, 4820.0], [30.1, 4826.0], [30.2, 4829.0], [30.3, 4836.0], [30.4, 4836.0], [30.5, 4837.0], [30.6, 4838.0], [30.7, 4839.0], [30.8, 4842.0], [30.9, 4848.0], [31.0, 4853.0], [31.1, 4854.0], [31.2, 4855.0], [31.3, 4859.0], [31.4, 4875.0], [31.5, 4879.0], [31.6, 4879.0], [31.7, 4880.0], [31.8, 4880.0], [31.9, 4880.0], [32.0, 4881.0], [32.1, 4884.0], [32.2, 4888.0], [32.3, 4893.0], [32.4, 4901.0], [32.5, 4904.0], [32.6, 4907.0], [32.7, 4909.0], [32.8, 4914.0], [32.9, 4916.0], [33.0, 4920.0], [33.1, 4924.0], [33.2, 4926.0], [33.3, 4940.0], [33.4, 4942.0], [33.5, 4943.0], [33.6, 4943.0], [33.7, 4943.0], [33.8, 4944.0], [33.9, 4944.0], [34.0, 4944.0], [34.1, 4944.0], [34.2, 4944.0], [34.3, 4945.0], [34.4, 4945.0], [34.5, 4945.0], [34.6, 4946.0], [34.7, 4947.0], [34.8, 4947.0], [34.9, 4948.0], [35.0, 4948.0], [35.1, 4949.0], [35.2, 4949.0], [35.3, 4949.0], [35.4, 4956.0], [35.5, 4970.0], [35.6, 4971.0], [35.7, 4973.0], [35.8, 4973.0], [35.9, 4974.0], [36.0, 4974.0], [36.1, 4974.0], [36.2, 4975.0], [36.3, 4975.0], [36.4, 4989.0], [36.5, 4994.0], [36.6, 4995.0], [36.7, 5007.0], [36.8, 5011.0], [36.9, 5011.0], [37.0, 5018.0], [37.1, 5034.0], [37.2, 5034.0], [37.3, 5035.0], [37.4, 5036.0], [37.5, 5037.0], [37.6, 5037.0], [37.7, 5039.0], [37.8, 5039.0], [37.9, 5040.0], [38.0, 5041.0], [38.1, 5042.0], [38.2, 5070.0], [38.3, 5086.0], [38.4, 5095.0], [38.5, 5102.0], [38.6, 5102.0], [38.7, 5105.0], [38.8, 5106.0], [38.9, 5107.0], [39.0, 5110.0], [39.1, 5111.0], [39.2, 5112.0], [39.3, 5114.0], [39.4, 5114.0], [39.5, 5115.0], [39.6, 5115.0], [39.7, 5116.0], [39.8, 5117.0], [39.9, 5117.0], [40.0, 5119.0], [40.1, 5124.0], [40.2, 5127.0], [40.3, 5128.0], [40.4, 5129.0], [40.5, 5129.0], [40.6, 5129.0], [40.7, 5129.0], [40.8, 5129.0], [40.9, 5130.0], [41.0, 5130.0], [41.1, 5130.0], [41.2, 5130.0], [41.3, 5131.0], [41.4, 5133.0], [41.5, 5134.0], [41.6, 5134.0], [41.7, 5135.0], [41.8, 5137.0], [41.9, 5140.0], [42.0, 5141.0], [42.1, 5142.0], [42.2, 5154.0], [42.3, 5163.0], [42.4, 5167.0], [42.5, 5168.0], [42.6, 5170.0], [42.7, 5172.0], [42.8, 5172.0], [42.9, 5175.0], [43.0, 5176.0], [43.1, 5177.0], [43.2, 5179.0], [43.3, 5180.0], [43.4, 5180.0], [43.5, 5181.0], [43.6, 5182.0], [43.7, 5185.0], [43.8, 5186.0], [43.9, 5189.0], [44.0, 5192.0], [44.1, 5197.0], [44.2, 5198.0], [44.3, 5198.0], [44.4, 5202.0], [44.5, 5214.0], [44.6, 5219.0], [44.7, 5229.0], [44.8, 5236.0], [44.9, 5242.0], [45.0, 5245.0], [45.1, 5253.0], [45.2, 5257.0], [45.3, 5261.0], [45.4, 5264.0], [45.5, 5265.0], [45.6, 5265.0], [45.7, 5273.0], [45.8, 5274.0], [45.9, 5275.0], [46.0, 5279.0], [46.1, 5283.0], [46.2, 5289.0], [46.3, 5292.0], [46.4, 5295.0], [46.5, 5299.0], [46.6, 5309.0], [46.7, 5312.0], [46.8, 5313.0], [46.9, 5313.0], [47.0, 5314.0], [47.1, 5315.0], [47.2, 5317.0], [47.3, 5318.0], [47.4, 5318.0], [47.5, 5319.0], [47.6, 5320.0], [47.7, 5320.0], [47.8, 5320.0], [47.9, 5320.0], [48.0, 5320.0], [48.1, 5321.0], [48.2, 5321.0], [48.3, 5322.0], [48.4, 5323.0], [48.5, 5325.0], [48.6, 5329.0], [48.7, 5331.0], [48.8, 5332.0], [48.9, 5343.0], [49.0, 5348.0], [49.1, 5359.0], [49.2, 5360.0], [49.3, 5370.0], [49.4, 5372.0], [49.5, 5372.0], [49.6, 5372.0], [49.7, 5373.0], [49.8, 5373.0], [49.9, 5373.0], [50.0, 5375.0], [50.1, 5386.0], [50.2, 5391.0], [50.3, 5400.0], [50.4, 5435.0], [50.5, 5438.0], [50.6, 5439.0], [50.7, 5439.0], [50.8, 5452.0], [50.9, 5460.0], [51.0, 5464.0], [51.1, 5467.0], [51.2, 5482.0], [51.3, 5499.0], [51.4, 5499.0], [51.5, 5500.0], [51.6, 5501.0], [51.7, 5502.0], [51.8, 5504.0], [51.9, 5505.0], [52.0, 5505.0], [52.1, 5514.0], [52.2, 5514.0], [52.3, 5515.0], [52.4, 5517.0], [52.5, 5518.0], [52.6, 5518.0], [52.7, 5519.0], [52.8, 5571.0], [52.9, 5599.0], [53.0, 5599.0], [53.1, 5600.0], [53.2, 5600.0], [53.3, 5600.0], [53.4, 5600.0], [53.5, 5601.0], [53.6, 5601.0], [53.7, 5602.0], [53.8, 5603.0], [53.9, 5603.0], [54.0, 5603.0], [54.1, 5604.0], [54.2, 5604.0], [54.3, 5604.0], [54.4, 5604.0], [54.5, 5604.0], [54.6, 5610.0], [54.7, 5611.0], [54.8, 5611.0], [54.9, 5611.0], [55.0, 5611.0], [55.1, 5612.0], [55.2, 5612.0], [55.3, 5612.0], [55.4, 5613.0], [55.5, 5613.0], [55.6, 5613.0], [55.7, 5615.0], [55.8, 5625.0], [55.9, 5633.0], [56.0, 5638.0], [56.1, 5645.0], [56.2, 5650.0], [56.3, 5653.0], [56.4, 5658.0], [56.5, 5662.0], [56.6, 5665.0], [56.7, 5666.0], [56.8, 5669.0], [56.9, 5669.0], [57.0, 5670.0], [57.1, 5670.0], [57.2, 5672.0], [57.3, 5673.0], [57.4, 5673.0], [57.5, 5673.0], [57.6, 5678.0], [57.7, 5680.0], [57.8, 5685.0], [57.9, 5693.0], [58.0, 5699.0], [58.1, 5700.0], [58.2, 5704.0], [58.3, 5721.0], [58.4, 5740.0], [58.5, 5741.0], [58.6, 5743.0], [58.7, 5750.0], [58.8, 5752.0], [58.9, 5752.0], [59.0, 5753.0], [59.1, 5754.0], [59.2, 5754.0], [59.3, 5755.0], [59.4, 5755.0], [59.5, 5756.0], [59.6, 5756.0], [59.7, 5758.0], [59.8, 5762.0], [59.9, 5763.0], [60.0, 5768.0], [60.1, 5772.0], [60.2, 5776.0], [60.3, 5776.0], [60.4, 5779.0], [60.5, 5793.0], [60.6, 5796.0], [60.7, 5816.0], [60.8, 5826.0], [60.9, 5836.0], [61.0, 5850.0], [61.1, 5860.0], [61.2, 5877.0], [61.3, 5893.0], [61.4, 5904.0], [61.5, 5904.0], [61.6, 5905.0], [61.7, 5909.0], [61.8, 5914.0], [61.9, 5915.0], [62.0, 5921.0], [62.1, 5922.0], [62.2, 5931.0], [62.3, 5937.0], [62.4, 5963.0], [62.5, 5985.0], [62.6, 5986.0], [62.7, 5987.0], [62.8, 5987.0], [62.9, 5988.0], [63.0, 5989.0], [63.1, 5989.0], [63.2, 5989.0], [63.3, 5989.0], [63.4, 5990.0], [63.5, 5990.0], [63.6, 5993.0], [63.7, 6000.0], [63.8, 6019.0], [63.9, 6019.0], [64.0, 6019.0], [64.1, 6019.0], [64.2, 6020.0], [64.3, 6020.0], [64.4, 6023.0], [64.5, 6032.0], [64.6, 6044.0], [64.7, 6053.0], [64.8, 6056.0], [64.9, 6061.0], [65.0, 6065.0], [65.1, 6075.0], [65.2, 6078.0], [65.3, 6083.0], [65.4, 6091.0], [65.5, 6095.0], [65.6, 6096.0], [65.7, 6097.0], [65.8, 6099.0], [65.9, 6100.0], [66.0, 6101.0], [66.1, 6101.0], [66.2, 6102.0], [66.3, 6109.0], [66.4, 6112.0], [66.5, 6121.0], [66.6, 6132.0], [66.7, 6135.0], [66.8, 6149.0], [66.9, 6176.0], [67.0, 6177.0], [67.1, 6177.0], [67.2, 6181.0], [67.3, 6189.0], [67.4, 6190.0], [67.5, 6190.0], [67.6, 6191.0], [67.7, 6192.0], [67.8, 6198.0], [67.9, 6200.0], [68.0, 6201.0], [68.1, 6203.0], [68.2, 6204.0], [68.3, 6229.0], [68.4, 6229.0], [68.5, 6231.0], [68.6, 6231.0], [68.7, 6232.0], [68.8, 6232.0], [68.9, 6232.0], [69.0, 6233.0], [69.1, 6233.0], [69.2, 6235.0], [69.3, 6239.0], [69.4, 6240.0], [69.5, 6241.0], [69.6, 6242.0], [69.7, 6244.0], [69.8, 6244.0], [69.9, 6244.0], [70.0, 6245.0], [70.1, 6246.0], [70.2, 6247.0], [70.3, 6247.0], [70.4, 6247.0], [70.5, 6248.0], [70.6, 6249.0], [70.7, 6250.0], [70.8, 6251.0], [70.9, 6274.0], [71.0, 6282.0], [71.1, 6286.0], [71.2, 6290.0], [71.3, 6297.0], [71.4, 6302.0], [71.5, 6304.0], [71.6, 6306.0], [71.7, 6308.0], [71.8, 6308.0], [71.9, 6308.0], [72.0, 6308.0], [72.1, 6308.0], [72.2, 6308.0], [72.3, 6309.0], [72.4, 6309.0], [72.5, 6314.0], [72.6, 6316.0], [72.7, 6317.0], [72.8, 6317.0], [72.9, 6318.0], [73.0, 6318.0], [73.1, 6319.0], [73.2, 6321.0], [73.3, 6321.0], [73.4, 6322.0], [73.5, 6322.0], [73.6, 6323.0], [73.7, 6326.0], [73.8, 6327.0], [73.9, 6328.0], [74.0, 6329.0], [74.1, 6330.0], [74.2, 6331.0], [74.3, 6331.0], [74.4, 6331.0], [74.5, 6332.0], [74.6, 6332.0], [74.7, 6334.0], [74.8, 6335.0], [74.9, 6337.0], [75.0, 6338.0], [75.1, 6339.0], [75.2, 6342.0], [75.3, 6343.0], [75.4, 6344.0], [75.5, 6344.0], [75.6, 6345.0], [75.7, 6346.0], [75.8, 6347.0], [75.9, 6347.0], [76.0, 6348.0], [76.1, 6349.0], [76.2, 6351.0], [76.3, 6353.0], [76.4, 6355.0], [76.5, 6355.0], [76.6, 6355.0], [76.7, 6356.0], [76.8, 6356.0], [76.9, 6356.0], [77.0, 6357.0], [77.1, 6358.0], [77.2, 6358.0], [77.3, 6359.0], [77.4, 6359.0], [77.5, 6359.0], [77.6, 6359.0], [77.7, 6359.0], [77.8, 6361.0], [77.9, 6403.0], [78.0, 6409.0], [78.1, 6413.0], [78.2, 6413.0], [78.3, 6424.0], [78.4, 6426.0], [78.5, 6429.0], [78.6, 6435.0], [78.7, 6437.0], [78.8, 6440.0], [78.9, 6440.0], [79.0, 6440.0], [79.1, 6441.0], [79.2, 6441.0], [79.3, 6441.0], [79.4, 6442.0], [79.5, 6457.0], [79.6, 6460.0], [79.7, 6461.0], [79.8, 6463.0], [79.9, 6463.0], [80.0, 6463.0], [80.1, 6464.0], [80.2, 6465.0], [80.3, 6466.0], [80.4, 6467.0], [80.5, 6468.0], [80.6, 6470.0], [80.7, 6480.0], [80.8, 6481.0], [80.9, 6511.0], [81.0, 6515.0], [81.1, 6516.0], [81.2, 6516.0], [81.3, 6516.0], [81.4, 6517.0], [81.5, 6517.0], [81.6, 6517.0], [81.7, 6517.0], [81.8, 6517.0], [81.9, 6518.0], [82.0, 6518.0], [82.1, 6518.0], [82.2, 6518.0], [82.3, 6519.0], [82.4, 6519.0], [82.5, 6520.0], [82.6, 6520.0], [82.7, 6520.0], [82.8, 6521.0], [82.9, 6521.0], [83.0, 6521.0], [83.1, 6521.0], [83.2, 6522.0], [83.3, 6522.0], [83.4, 6522.0], [83.5, 6523.0], [83.6, 6524.0], [83.7, 6525.0], [83.8, 6525.0], [83.9, 6526.0], [84.0, 6528.0], [84.1, 6530.0], [84.2, 6537.0], [84.3, 6545.0], [84.4, 6642.0], [84.5, 6643.0], [84.6, 6643.0], [84.7, 6646.0], [84.8, 6646.0], [84.9, 6647.0], [85.0, 6649.0], [85.1, 6649.0], [85.2, 6649.0], [85.3, 6650.0], [85.4, 6654.0], [85.5, 6659.0], [85.6, 6660.0], [85.7, 6662.0], [85.8, 6667.0], [85.9, 6672.0], [86.0, 6682.0], [86.1, 6683.0], [86.2, 6688.0], [86.3, 6692.0], [86.4, 6693.0], [86.5, 6700.0], [86.6, 6716.0], [86.7, 6720.0], [86.8, 6721.0], [86.9, 6721.0], [87.0, 6722.0], [87.1, 6723.0], [87.2, 6726.0], [87.3, 6728.0], [87.4, 6729.0], [87.5, 6729.0], [87.6, 6731.0], [87.7, 6732.0], [87.8, 6733.0], [87.9, 6734.0], [88.0, 6738.0], [88.1, 6742.0], [88.2, 6746.0], [88.3, 6751.0], [88.4, 6752.0], [88.5, 6755.0], [88.6, 6755.0], [88.7, 6757.0], [88.8, 6757.0], [88.9, 6758.0], [89.0, 6758.0], [89.1, 6761.0], [89.2, 6774.0], [89.3, 6775.0], [89.4, 6776.0], [89.5, 6777.0], [89.6, 6779.0], [89.7, 6791.0], [89.8, 6792.0], [89.9, 6792.0], [90.0, 6797.0], [90.1, 6805.0], [90.2, 6822.0], [90.3, 6847.0], [90.4, 6866.0], [90.5, 6883.0], [90.6, 6901.0], [90.7, 6902.0], [90.8, 6908.0], [90.9, 6925.0], [91.0, 6935.0], [91.1, 6945.0], [91.2, 6946.0], [91.3, 6947.0], [91.4, 6953.0], [91.5, 6966.0], [91.6, 6981.0], [91.7, 6981.0], [91.8, 6981.0], [91.9, 6981.0], [92.0, 6983.0], [92.1, 6984.0], [92.2, 6984.0], [92.3, 7019.0], [92.4, 7036.0], [92.5, 7074.0], [92.6, 7152.0], [92.7, 7162.0], [92.8, 7174.0], [92.9, 7207.0], [93.0, 7210.0], [93.1, 7211.0], [93.2, 7211.0], [93.3, 7211.0], [93.4, 7213.0], [93.5, 7227.0], [93.6, 7243.0], [93.7, 7250.0], [93.8, 7250.0], [93.9, 7251.0], [94.0, 7251.0], [94.1, 7252.0], [94.2, 7252.0], [94.3, 7253.0], [94.4, 7254.0], [94.5, 7256.0], [94.6, 7271.0], [94.7, 7277.0], [94.8, 7286.0], [94.9, 7294.0], [95.0, 7301.0], [95.1, 7319.0], [95.2, 7340.0], [95.3, 7340.0], [95.4, 7351.0], [95.5, 7351.0], [95.6, 7352.0], [95.7, 7360.0], [95.8, 7362.0], [95.9, 7362.0], [96.0, 7362.0], [96.1, 7362.0], [96.2, 7363.0], [96.3, 7364.0], [96.4, 7364.0], [96.5, 7365.0], [96.6, 7366.0], [96.7, 7366.0], [96.8, 8117.0], [96.9, 8211.0], [97.0, 8406.0], [97.1, 8448.0], [97.2, 8587.0], [97.3, 8607.0], [97.4, 8613.0], [97.5, 8639.0], [97.6, 8658.0], [97.7, 8692.0], [97.8, 8791.0], [97.9, 8817.0], [98.0, 8857.0], [98.1, 9473.0], [98.2, 9506.0], [98.3, 9543.0], [98.4, 9788.0], [98.5, 9815.0], [98.6, 9856.0], [98.7, 9902.0], [98.8, 10034.0], [98.9, 10059.0], [99.0, 10067.0], [99.1, 10086.0], [99.2, 10103.0], [99.3, 10118.0], [99.4, 10145.0], [99.5, 10206.0], [99.6, 10844.0], [99.7, 10881.0], [99.8, 10915.0], [99.9, 10948.0], [100.0, 10980.0]], "isOverall": false, "label": "MainPage /me HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 736.0, "series": [{"data": [[300.0, 20.0], [400.0, 25.0], [500.0, 3.0], [600.0, 12.0], [700.0, 11.0], [800.0, 31.0], [900.0, 17.0], [1000.0, 7.0], [1300.0, 20.0], [1400.0, 32.0], [1500.0, 30.0], [1600.0, 19.0], [1700.0, 5.0], [1800.0, 23.0], [1900.0, 2.0], [2000.0, 34.0], [2100.0, 23.0], [2300.0, 13.0], [2200.0, 40.0], [2400.0, 8.0], [2500.0, 13.0], [2600.0, 35.0], [2800.0, 42.0], [2700.0, 50.0], [2900.0, 10.0], [3000.0, 20.0], [3100.0, 16.0], [3300.0, 55.0], [3200.0, 50.0], [3400.0, 10.0], [3500.0, 43.0], [3700.0, 46.0], [3600.0, 27.0], [4000.0, 11.0], [4200.0, 86.0], [4100.0, 34.0], [4400.0, 3.0], [4500.0, 76.0], [4600.0, 25.0], [4800.0, 54.0], [4700.0, 27.0], [5000.0, 49.0], [5100.0, 10.0], [4900.0, 27.0], [5300.0, 117.0], [5200.0, 57.0], [5400.0, 84.0], [5500.0, 65.0], [5600.0, 52.0], [5800.0, 2.0], [5700.0, 19.0], [6000.0, 58.0], [6100.0, 150.0], [5900.0, 67.0], [6300.0, 63.0], [6200.0, 20.0], [6400.0, 311.0], [6600.0, 112.0], [6500.0, 54.0], [6900.0, 37.0], [6800.0, 125.0], [6700.0, 234.0], [7100.0, 185.0], [7000.0, 62.0], [7400.0, 44.0], [7300.0, 76.0], [7200.0, 129.0], [7600.0, 192.0], [7500.0, 69.0], [7900.0, 219.0], [7800.0, 67.0], [7700.0, 58.0], [8100.0, 287.0], [8000.0, 130.0], [8200.0, 229.0], [8700.0, 261.0], [8600.0, 204.0], [8500.0, 136.0], [8400.0, 37.0], [8300.0, 171.0], [8900.0, 486.0], [8800.0, 441.0], [9200.0, 285.0], [9100.0, 480.0], [9000.0, 620.0], [9400.0, 548.0], [9300.0, 356.0], [9500.0, 162.0], [9600.0, 56.0], [9700.0, 110.0], [9800.0, 160.0], [9900.0, 169.0], [10200.0, 32.0], [10100.0, 40.0], [10000.0, 65.0], [10600.0, 124.0], [10700.0, 9.0], [10500.0, 32.0], [10400.0, 55.0], [10300.0, 18.0], [10900.0, 40.0], [11000.0, 55.0], [11200.0, 56.0], [10800.0, 12.0], [11100.0, 27.0], [11500.0, 26.0], [11300.0, 22.0], [11700.0, 24.0], [11400.0, 26.0], [11800.0, 15.0], [11900.0, 1.0], [13000.0, 65.0], [17300.0, 6.0]], "isOverall": false, "label": "MainPage /login HTTP Request", "isController": false}, {"data": [[0.0, 3.0], [100.0, 7.0], [200.0, 51.0], [300.0, 21.0], [400.0, 12.0], [500.0, 34.0], [600.0, 38.0], [700.0, 33.0], [800.0, 18.0], [900.0, 10.0], [1000.0, 61.0], [1100.0, 37.0], [1200.0, 28.0], [1300.0, 18.0], [1400.0, 39.0], [1500.0, 35.0], [1600.0, 41.0], [1700.0, 17.0], [1800.0, 13.0], [1900.0, 30.0], [2000.0, 98.0], [2100.0, 16.0], [2300.0, 18.0], [2200.0, 53.0], [2400.0, 20.0], [2500.0, 50.0], [2600.0, 19.0], [2700.0, 142.0], [2800.0, 17.0], [2900.0, 16.0], [3000.0, 41.0], [3100.0, 7.0], [3300.0, 147.0], [3200.0, 37.0], [3400.0, 7.0], [3500.0, 62.0], [3700.0, 10.0], [3600.0, 12.0], [3800.0, 138.0], [3900.0, 266.0], [4000.0, 31.0], [4300.0, 174.0], [4200.0, 109.0], [4100.0, 76.0], [4400.0, 58.0], [4600.0, 209.0], [4500.0, 67.0], [4700.0, 119.0], [4800.0, 102.0], [5100.0, 316.0], [5000.0, 157.0], [4900.0, 195.0], [5300.0, 409.0], [5200.0, 525.0], [5400.0, 153.0], [5600.0, 217.0], [5500.0, 89.0], [5700.0, 194.0], [5800.0, 122.0], [6000.0, 138.0], [5900.0, 97.0], [6100.0, 290.0], [6300.0, 736.0], [6200.0, 452.0], [6600.0, 114.0], [6500.0, 441.0], [6400.0, 388.0], [6900.0, 365.0], [6800.0, 80.0], [6700.0, 470.0], [7100.0, 41.0], [7000.0, 49.0], [7400.0, 62.0], [7300.0, 425.0], [7200.0, 260.0], [7600.0, 14.0], [7500.0, 6.0], [7900.0, 11.0], [7800.0, 33.0], [7700.0, 91.0], [8000.0, 2.0], [8700.0, 4.0], [8600.0, 3.0], [8900.0, 3.0], [8800.0, 16.0], [9400.0, 6.0], [9500.0, 30.0], [9600.0, 31.0], [9700.0, 43.0], [9900.0, 23.0], [10000.0, 49.0], [10100.0, 31.0], [9800.0, 15.0], [10600.0, 1.0], [10700.0, 27.0], [10800.0, 51.0], [10900.0, 29.0], [11000.0, 28.0], [11100.0, 1.0]], "isOverall": false, "label": "MainPage /rooms HTTP Request", "isController": false}, {"data": [[0.0, 7.0], [600.0, 32.0], [700.0, 25.0], [900.0, 19.0], [1000.0, 52.0], [1100.0, 26.0], [1200.0, 60.0], [1300.0, 19.0], [1400.0, 24.0], [1500.0, 27.0], [1600.0, 31.0], [1700.0, 41.0], [1800.0, 36.0], [1900.0, 40.0], [2000.0, 71.0], [2100.0, 55.0], [2200.0, 63.0], [2300.0, 3.0], [2400.0, 24.0], [2500.0, 39.0], [2700.0, 69.0], [2800.0, 76.0], [2900.0, 9.0], [3000.0, 72.0], [3100.0, 27.0], [3300.0, 102.0], [3200.0, 13.0], [3400.0, 153.0], [3500.0, 88.0], [3700.0, 20.0], [3600.0, 7.0], [3800.0, 123.0], [3900.0, 227.0], [4000.0, 9.0], [4100.0, 54.0], [4200.0, 97.0], [4300.0, 206.0], [4600.0, 326.0], [4400.0, 20.0], [4500.0, 228.0], [4800.0, 323.0], [4700.0, 167.0], [4900.0, 423.0], [5100.0, 587.0], [5000.0, 182.0], [5200.0, 221.0], [5300.0, 378.0], [5600.0, 498.0], [5500.0, 162.0], [5400.0, 116.0], [5700.0, 256.0], [5800.0, 75.0], [6000.0, 217.0], [6100.0, 198.0], [5900.0, 232.0], [6300.0, 659.0], [6200.0, 347.0], [6400.0, 297.0], [6500.0, 348.0], [6600.0, 215.0], [6900.0, 170.0], [6800.0, 53.0], [6700.0, 356.0], [7000.0, 28.0], [7100.0, 28.0], [7300.0, 176.0], [7200.0, 213.0], [8100.0, 11.0], [8000.0, 4.0], [8500.0, 14.0], [8600.0, 45.0], [8300.0, 3.0], [8400.0, 14.0], [8700.0, 12.0], [8200.0, 6.0], [8800.0, 20.0], [9400.0, 15.0], [9500.0, 20.0], [9700.0, 6.0], [10000.0, 40.0], [10100.0, 30.0], [10200.0, 1.0], [9800.0, 24.0], [9900.0, 12.0], [10800.0, 28.0], [10900.0, 22.0], [100.0, 16.0], [200.0, 44.0], [300.0, 15.0], [400.0, 3.0], [500.0, 50.0]], "isOverall": false, "label": "MainPage /me HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 17300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 225.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 29020.0, "series": [{"data": [[0.0, 225.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 755.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 29020.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 364.52659574468066, "minX": 1.66921494E12, "maxY": 990.2284122562664, "series": [{"data": [[1.66921494E12, 364.52659574468066], [1.66921506E12, 990.2284122562664], [1.66921518E12, 485.01626677511194], [1.669215E12, 975.4029923963731], [1.66921512E12, 863.871961492176]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66921518E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 30.5, "minX": 1.0, "maxY": 11903.0, "series": [{"data": [[2.0, 2871.0], [3.0, 2873.0], [4.0, 2866.0], [5.0, 2859.0], [6.0, 2851.0], [7.0, 2832.0], [8.0, 2820.0], [9.0, 2814.0], [10.0, 2799.0], [11.0, 2780.0], [12.0, 2773.0], [13.0, 2758.0], [14.0, 2754.0], [15.0, 2731.0], [16.0, 2716.0], [17.0, 2714.0], [18.0, 2704.0], [19.0, 2675.0], [20.0, 2709.0], [21.0, 2696.0], [22.0, 2693.0], [23.0, 2670.0], [24.0, 2654.0], [25.0, 2651.0], [26.0, 2640.0], [27.0, 2617.0], [28.0, 2598.0], [29.0, 2595.0], [30.0, 2591.0], [31.0, 2568.0], [33.0, 2478.0], [32.0, 2557.0], [35.0, 2464.0], [34.0, 2469.0], [37.0, 760.0], [36.0, 2449.0], [39.0, 2412.0], [38.0, 2446.0], [40.0, 783.8], [41.0, 2397.0], [43.0, 2369.0], [42.0, 2397.0], [45.0, 966.5], [44.0, 2369.0], [46.0, 657.0999999999999], [47.0, 2313.0], [48.0, 941.5], [49.0, 2305.0], [51.0, 2270.0], [50.0, 2305.0], [53.0, 832.75], [52.0, 2263.0], [55.0, 2221.0], [54.0, 2256.0], [57.0, 696.6], [56.0, 2210.0], [58.0, 947.6666666666666], [59.0, 2169.0], [61.0, 2156.0], [60.0, 2164.0], [63.0, 2116.0], [62.0, 2154.0], [67.0, 2073.0], [66.0, 2106.0], [65.0, 2109.0], [64.0, 2111.0], [68.0, 555.0], [71.0, 2026.0], [70.0, 2071.0], [69.0, 2073.0], [74.0, 748.3333333333334], [75.0, 1974.0], [73.0, 2016.0], [72.0, 2019.0], [79.0, 3644.0], [78.0, 3680.0], [77.0, 3681.0], [76.0, 1971.0], [83.0, 3610.0], [82.0, 3646.0], [81.0, 3635.0], [80.0, 3654.0], [84.0, 832.5499999999998], [87.0, 3592.0], [86.0, 3596.0], [85.0, 3617.0], [91.0, 1238.4], [90.0, 3574.0], [89.0, 3574.0], [88.0, 3590.0], [95.0, 3553.0], [94.0, 3572.0], [93.0, 3572.0], [92.0, 3572.0], [99.0, 3572.0], [98.0, 3554.0], [97.0, 3570.0], [96.0, 3573.0], [103.0, 3572.0], [102.0, 3572.0], [101.0, 3571.0], [100.0, 3572.0], [106.0, 1137.75], [107.0, 3535.0], [105.0, 3574.0], [104.0, 3572.0], [111.0, 3556.0], [110.0, 3532.0], [109.0, 3556.0], [108.0, 3555.0], [115.0, 1174.888888888889], [114.0, 3536.0], [113.0, 3535.0], [112.0, 3535.0], [119.0, 3536.0], [118.0, 3535.0], [117.0, 3537.0], [116.0, 3537.0], [123.0, 3554.0], [122.0, 3536.0], [121.0, 3537.0], [120.0, 3537.0], [124.0, 1443.0], [125.0, 1541.25], [127.0, 3538.0], [126.0, 3537.0], [135.0, 5070.0], [134.0, 5067.0], [133.0, 5070.0], [132.0, 5070.0], [131.0, 5070.0], [130.0, 5085.0], [129.0, 5084.0], [128.0, 3554.0], [137.0, 1095.3529411764705], [143.0, 4692.0], [142.0, 4689.0], [141.0, 4688.0], [140.0, 4710.0], [139.0, 4712.0], [138.0, 5054.0], [136.0, 5054.0], [150.0, 1264.4285714285713], [151.0, 4680.0], [149.0, 4678.0], [148.0, 4679.0], [147.0, 4681.0], [146.0, 4678.0], [145.0, 4689.0], [144.0, 4689.0], [159.0, 4646.0], [158.0, 4645.0], [157.0, 4647.0], [156.0, 4660.0], [155.0, 4662.0], [154.0, 4657.0], [153.0, 4659.0], [152.0, 4662.0], [167.0, 3772.0], [166.0, 3771.0], [165.0, 3771.0], [164.0, 4630.0], [163.0, 4630.0], [162.0, 4646.0], [161.0, 4646.0], [160.0, 4644.0], [170.0, 1693.142857142857], [172.0, 1486.5909090909095], [175.0, 3391.0], [174.0, 3759.0], [173.0, 3774.0], [171.0, 3791.0], [169.0, 3777.0], [168.0, 3793.0], [183.0, 3415.0], [182.0, 3413.0], [181.0, 3432.0], [180.0, 3432.0], [179.0, 3432.0], [178.0, 3393.0], [177.0, 3391.0], [176.0, 3393.0], [190.0, 1647.3888888888887], [191.0, 3401.0], [189.0, 3394.0], [188.0, 3400.0], [187.0, 3396.0], [186.0, 3415.0], [185.0, 3415.0], [184.0, 3417.0], [199.0, 3366.0], [198.0, 3363.0], [197.0, 3387.0], [196.0, 3389.0], [195.0, 3388.0], [194.0, 3384.0], [193.0, 3388.0], [192.0, 3399.0], [207.0, 1860.3636363636363], [206.0, 3350.0], [205.0, 3350.0], [204.0, 3350.0], [203.0, 3350.0], [202.0, 3350.0], [201.0, 3364.0], [200.0, 3367.0], [208.0, 3773.0], [215.0, 5370.0], [214.0, 5368.0], [213.0, 5370.0], [212.0, 5368.0], [211.0, 5369.0], [210.0, 5367.0], [209.0, 5950.0], [223.0, 1691.1666666666665], [222.0, 5371.0], [221.0, 5371.0], [220.0, 5370.0], [219.0, 5370.0], [218.0, 5369.0], [217.0, 5369.0], [216.0, 5369.0], [231.0, 5379.0], [230.0, 5377.0], [229.0, 5370.0], [228.0, 5377.0], [227.0, 5373.0], [226.0, 5371.0], [225.0, 5370.0], [224.0, 5372.0], [239.0, 5379.0], [238.0, 5378.0], [237.0, 5377.0], [236.0, 5379.0], [235.0, 5377.0], [234.0, 5377.0], [233.0, 5377.0], [232.0, 5376.0], [242.0, 1917.2], [243.0, 1880.7], [247.0, 5379.0], [246.0, 5380.0], [245.0, 5380.0], [244.0, 5379.0], [241.0, 5378.0], [240.0, 5379.0], [255.0, 5379.0], [254.0, 5381.0], [253.0, 5380.0], [252.0, 5380.0], [251.0, 5383.0], [250.0, 5380.0], [249.0, 5380.0], [248.0, 5380.0], [270.0, 2087.2666666666664], [271.0, 2052.4], [269.0, 5384.0], [268.0, 5384.0], [267.0, 5380.0], [266.0, 5380.0], [265.0, 5380.0], [264.0, 5379.0], [263.0, 5379.0], [257.0, 5378.0], [256.0, 5380.0], [259.0, 5379.0], [258.0, 5375.0], [262.0, 5379.0], [261.0, 5379.0], [260.0, 5379.0], [286.0, 7093.0], [287.0, 7110.0], [285.0, 7110.0], [284.0, 7094.0], [283.0, 7094.0], [282.0, 7093.0], [281.0, 7093.0], [280.0, 7077.0], [279.0, 7076.0], [273.0, 5385.0], [272.0, 5384.0], [275.0, 5387.0], [274.0, 5386.0], [278.0, 5385.0], [277.0, 5387.0], [276.0, 5385.0], [302.0, 4929.0], [294.0, 2170.5555555555557], [293.0, 4914.0], [292.0, 4914.0], [295.0, 4915.0], [289.0, 4897.0], [288.0, 4879.0], [291.0, 4897.0], [290.0, 4895.0], [303.0, 4948.0], [301.0, 4929.0], [300.0, 4932.0], [299.0, 4931.0], [298.0, 4930.0], [297.0, 4912.0], [296.0, 4912.0], [318.0, 4995.0], [319.0, 5013.0], [317.0, 4980.0], [316.0, 4999.0], [315.0, 4998.0], [314.0, 4979.0], [313.0, 4982.0], [312.0, 4981.0], [311.0, 4964.0], [305.0, 4945.0], [304.0, 4949.0], [307.0, 4965.0], [306.0, 4946.0], [310.0, 4964.0], [309.0, 4962.0], [308.0, 4964.0], [334.0, 3227.0], [325.0, 2411.0000000000005], [324.0, 5027.0], [326.0, 2302.5], [335.0, 3246.0], [333.0, 3228.0], [332.0, 3228.0], [327.0, 5045.0], [321.0, 5027.0], [320.0, 5029.0], [323.0, 5046.0], [322.0, 4993.0], [331.0, 3247.0], [330.0, 5042.0], [329.0, 5062.0], [328.0, 5046.0], [350.0, 3235.0], [351.0, 3235.0], [349.0, 3236.0], [348.0, 3235.0], [347.0, 3219.0], [346.0, 3235.0], [345.0, 3236.0], [344.0, 3216.0], [343.0, 3236.0], [337.0, 3239.0], [336.0, 3241.0], [339.0, 3259.0], [338.0, 3241.0], [342.0, 3232.0], [341.0, 3234.0], [340.0, 3235.0], [366.0, 3253.0], [360.0, 2658.8620689655168], [361.0, 2659.7500000000005], [367.0, 5169.0], [365.0, 3253.0], [364.0, 3253.0], [363.0, 3272.0], [362.0, 3252.0], [359.0, 3255.0], [353.0, 3237.0], [352.0, 3236.0], [355.0, 3237.0], [354.0, 3235.0], [358.0, 3251.0], [357.0, 3269.0], [356.0, 3253.0], [382.0, 5213.0], [383.0, 5214.0], [381.0, 5214.0], [380.0, 5201.0], [379.0, 5203.0], [378.0, 5202.0], [377.0, 5202.0], [376.0, 5186.0], [375.0, 5185.0], [369.0, 5168.0], [368.0, 5169.0], [371.0, 5186.0], [370.0, 5168.0], [374.0, 5186.0], [373.0, 5185.0], [372.0, 5168.0], [399.0, 4539.0], [391.0, 2936.75], [390.0, 5257.0], [389.0, 5230.0], [388.0, 5232.0], [392.0, 2910.7333333333336], [398.0, 5273.0], [397.0, 5274.0], [396.0, 5275.0], [387.0, 5232.0], [386.0, 5231.0], [385.0, 5214.0], [384.0, 5214.0], [395.0, 5274.0], [394.0, 5257.0], [393.0, 5274.0], [414.0, 4504.0], [415.0, 4541.0], [413.0, 4524.0], [412.0, 4523.0], [411.0, 4507.0], [410.0, 4504.0], [409.0, 4522.0], [408.0, 4522.0], [407.0, 4524.0], [401.0, 4539.0], [400.0, 4541.0], [403.0, 4531.0], [402.0, 4517.0], [406.0, 4529.0], [405.0, 4531.0], [404.0, 4533.0], [430.0, 4547.0], [421.0, 2905.125], [420.0, 4524.0], [422.0, 2866.833333333334], [431.0, 4567.0], [429.0, 4549.0], [428.0, 4547.0], [423.0, 4524.0], [417.0, 4505.0], [416.0, 4506.0], [419.0, 4523.0], [418.0, 4506.0], [427.0, 4548.0], [426.0, 4544.0], [425.0, 4524.0], [424.0, 4523.0], [446.0, 4524.0], [447.0, 4587.0], [445.0, 4585.0], [444.0, 4526.0], [443.0, 4602.0], [442.0, 4525.0], [441.0, 4542.0], [440.0, 4544.0], [439.0, 4526.0], [433.0, 4524.0], [432.0, 4524.0], [435.0, 4525.0], [434.0, 4525.0], [438.0, 4524.0], [437.0, 4543.0], [436.0, 4542.0], [462.0, 4539.0], [463.0, 4541.0], [461.0, 4538.0], [460.0, 4541.0], [459.0, 4558.0], [458.0, 4556.0], [457.0, 4556.0], [456.0, 4552.0], [455.0, 4553.0], [449.0, 4567.0], [448.0, 4584.0], [451.0, 4569.0], [450.0, 4567.0], [454.0, 4566.0], [453.0, 4570.0], [452.0, 4569.0], [478.0, 4488.0], [465.0, 3307.714285714286], [464.0, 4541.0], [471.0, 4504.0], [470.0, 4522.0], [469.0, 4525.0], [468.0, 4526.0], [466.0, 3078.9024390243894], [479.0, 8059.0], [477.0, 4487.0], [476.0, 4488.0], [467.0, 4525.0], [475.0, 4507.0], [474.0, 4502.0], [473.0, 4505.0], [472.0, 4505.0], [494.0, 8059.0], [495.0, 8059.0], [493.0, 8058.0], [492.0, 8059.0], [491.0, 8058.0], [490.0, 8059.0], [489.0, 8058.0], [488.0, 8057.0], [487.0, 8055.0], [481.0, 8055.0], [480.0, 8056.0], [483.0, 8058.0], [482.0, 8056.0], [486.0, 8058.0], [485.0, 8060.0], [484.0, 8059.0], [511.0, 8071.0], [504.0, 3685.153846153846], [505.0, 3631.125], [506.0, 3490.3809523809527], [510.0, 8068.0], [509.0, 8071.0], [508.0, 8071.0], [499.0, 8060.0], [498.0, 8059.0], [497.0, 8059.0], [496.0, 8059.0], [507.0, 8069.0], [503.0, 8060.0], [502.0, 8060.0], [501.0, 8059.0], [500.0, 8061.0], [540.0, 7649.0], [543.0, 7648.0], [529.0, 7648.0], [528.0, 7648.0], [531.0, 7643.0], [530.0, 7647.0], [533.0, 7649.0], [532.0, 7647.0], [542.0, 7650.0], [541.0, 7651.0], [539.0, 7648.0], [538.0, 7649.0], [537.0, 7648.0], [536.0, 7648.0], [527.0, 7649.0], [513.0, 8077.0], [512.0, 8078.0], [515.0, 8079.0], [514.0, 8078.0], [517.0, 8085.0], [516.0, 8079.0], [519.0, 8100.0], [518.0, 8085.0], [526.0, 5310.286624203823], [525.0, 8114.0], [524.0, 8116.0], [523.0, 8098.0], [522.0, 8098.0], [521.0, 8097.0], [520.0, 8098.0], [535.0, 7646.0], [534.0, 7648.0], [572.0, 9384.0], [555.0, 3989.222222222222], [554.0, 9372.0], [553.0, 9372.0], [552.0, 9368.0], [556.0, 3848.052631578948], [575.0, 9383.0], [561.0, 9388.0], [560.0, 9382.0], [563.0, 9379.0], [562.0, 9382.0], [565.0, 9386.0], [564.0, 9389.0], [567.0, 9388.0], [566.0, 9386.0], [574.0, 9384.0], [573.0, 9386.0], [571.0, 9387.0], [570.0, 9386.0], [569.0, 9388.0], [568.0, 9390.0], [559.0, 9371.0], [545.0, 7649.0], [544.0, 7652.0], [547.0, 7649.0], [546.0, 7649.0], [549.0, 7652.0], [548.0, 7652.0], [551.0, 7649.0], [550.0, 7651.0], [558.0, 9370.0], [557.0, 9382.0], [604.0, 8130.0], [607.0, 8129.0], [593.0, 5554.0], [592.0, 5554.0], [595.0, 5582.333333333333], [594.0, 5554.0], [597.0, 5925.314049586778], [596.0, 5536.0], [606.0, 8129.0], [605.0, 8128.0], [603.0, 8128.0], [602.0, 8128.0], [601.0, 8128.0], [600.0, 8129.0], [591.0, 7460.0], [577.0, 9386.0], [576.0, 9385.0], [579.0, 9384.0], [578.0, 9386.0], [581.0, 9387.0], [580.0, 9387.0], [583.0, 9384.0], [582.0, 9387.0], [590.0, 7443.0], [589.0, 7462.0], [588.0, 7461.0], [587.0, 9385.0], [586.0, 9387.0], [585.0, 9386.0], [584.0, 9389.0], [599.0, 8128.0], [598.0, 8128.0], [636.0, 8134.0], [611.0, 4052.6666666666665], [608.0, 4647.888888888888], [623.0, 8129.0], [622.0, 8127.0], [621.0, 8125.0], [620.0, 8129.0], [619.0, 8127.0], [618.0, 8127.0], [617.0, 8127.0], [616.0, 8126.0], [609.0, 4337.969696969698], [610.0, 4259.162162162161], [639.0, 8134.0], [625.0, 8128.0], [624.0, 8127.0], [627.0, 8128.0], [626.0, 8127.0], [629.0, 8129.0], [628.0, 8129.0], [631.0, 8134.0], [630.0, 8132.0], [638.0, 8134.0], [637.0, 8133.0], [635.0, 8135.0], [634.0, 8134.0], [633.0, 8131.0], [632.0, 8133.0], [615.0, 8126.0], [614.0, 8125.0], [613.0, 8126.0], [612.0, 8127.0], [668.0, 5387.0], [670.0, 4899.833333333333], [671.0, 4841.820512820514], [657.0, 10419.0], [656.0, 10419.0], [659.0, 7523.0], [658.0, 10417.0], [661.0, 8278.0], [660.0, 7506.0], [669.0, 5388.0], [667.0, 5388.0], [666.0, 5370.0], [665.0, 5370.0], [664.0, 5401.0], [655.0, 10418.0], [641.0, 10410.0], [640.0, 8135.0], [643.0, 10414.0], [642.0, 8134.0], [645.0, 10416.0], [644.0, 10417.0], [647.0, 10416.0], [646.0, 10415.0], [654.0, 10417.0], [653.0, 10417.0], [652.0, 10418.0], [651.0, 10417.0], [650.0, 10416.0], [649.0, 10418.0], [648.0, 10416.0], [663.0, 5382.0], [662.0, 5383.0], [700.0, 6739.0], [672.0, 4769.214285714286], [673.0, 5369.0], [675.0, 5387.0], [674.0, 5369.0], [677.0, 5547.0], [676.0, 5369.0], [679.0, 5934.4], [678.0, 5721.127118644068], [687.0, 6560.0], [686.0, 6561.0], [685.0, 5937.5], [683.0, 5940.0], [682.0, 5940.0], [681.0, 5933.0], [680.0, 5934.5], [703.0, 6736.0], [689.0, 6558.0], [688.0, 6557.0], [691.0, 6480.0], [690.0, 6519.0], [693.0, 6480.0], [692.0, 6478.5], [695.0, 6526.935714285716], [694.0, 6479.0], [702.0, 6736.0], [701.0, 6737.0], [699.0, 6736.5], [698.0, 6738.0], [697.0, 6737.0], [696.0, 6735.0], [732.0, 7951.0], [735.0, 7950.0], [721.0, 6742.0], [720.0, 6740.0], [723.0, 6739.0], [722.0, 6739.0], [725.0, 7949.0], [724.0, 7951.0], [734.0, 7951.0], [733.0, 7949.0], [731.0, 7950.0], [730.0, 7947.0], [729.0, 7951.0], [728.0, 7951.0], [719.0, 6740.0], [705.0, 6739.0], [704.0, 6737.0], [707.0, 6739.0], [706.0, 6737.0], [709.0, 6737.0], [708.0, 6739.0], [711.0, 6739.0], [710.0, 6738.0], [718.0, 6740.0], [717.0, 6739.0], [716.0, 6739.0], [715.0, 6740.0], [714.0, 6738.0], [713.0, 6738.0], [712.0, 6741.0], [727.0, 7950.0], [726.0, 7949.0], [764.0, 8353.0], [739.0, 5506.766666666666], [738.0, 7951.0], [737.0, 7950.0], [736.0, 7952.0], [751.0, 8352.0], [750.0, 8350.0], [749.0, 8350.5], [748.0, 8351.0], [747.0, 8351.0], [746.0, 8350.0], [745.0, 8350.0], [744.0, 8351.0], [740.0, 5430.486486486487], [741.0, 5599.0], [743.0, 8349.0], [742.0, 8310.24210526316], [761.0, 8354.0], [760.0, 8353.0], [767.0, 8354.0], [753.0, 8352.0], [752.0, 8349.0], [755.0, 8352.0], [754.0, 8352.0], [757.0, 8353.0], [756.0, 8352.0], [759.0, 8351.0], [758.0, 8354.0], [766.0, 8353.0], [765.0, 8355.0], [763.0, 8354.0], [762.0, 8352.0], [796.0, 8043.0], [799.0, 6079.25], [785.0, 8104.9047619047615], [784.0, 8128.0], [787.0, 8059.0], [786.0, 8062.0], [789.0, 8059.0], [788.0, 8061.0], [798.0, 8030.0], [797.0, 8044.0], [795.0, 8047.0], [794.0, 8047.0], [793.0, 8044.0], [792.0, 8044.0], [783.0, 8130.0], [769.0, 8354.0], [768.0, 8354.0], [771.0, 8355.0], [770.0, 8355.0], [773.0, 8355.0], [772.0, 8355.0], [775.0, 8355.0], [774.0, 8356.0], [782.0, 8145.5], [781.0, 8145.0], [780.0, 8147.0], [779.0, 8146.0], [778.0, 8156.0], [777.0, 8582.173267326738], [776.0, 8356.0], [791.0, 8063.0], [790.0, 8060.0], [828.0, 6562.0], [800.0, 5511.65625], [815.0, 7996.0], [814.0, 7995.0], [813.0, 7995.0], [812.0, 7994.0], [811.0, 7994.0], [810.0, 7997.0], [809.0, 8009.0], [808.0, 8011.0], [801.0, 5361.75], [802.0, 6623.5], [803.0, 8030.0], [805.0, 8008.0], [804.0, 8011.0], [807.0, 8011.0], [806.0, 8012.0], [825.0, 6561.0], [824.0, 6541.0], [831.0, 6579.0], [817.0, 6435.999999999999], [816.0, 7980.0], [819.0, 6523.5], [818.0, 6515.0], [821.0, 6514.0], [820.0, 6532.0], [823.0, 6532.5], [822.0, 6533.0], [830.0, 6581.0], [829.0, 6561.0], [827.0, 6571.0], [826.0, 6562.0], [860.0, 9149.0], [863.0, 9148.0], [849.0, 7064.0], [848.0, 7064.0], [851.0, 7048.0], [850.0, 7061.0], [853.0, 7045.0], [852.0, 7047.0], [862.0, 9146.0], [861.0, 9146.0], [859.0, 9149.0], [858.0, 7718.966666666669], [857.0, 7031.0], [856.0, 7030.0], [847.0, 7065.0], [833.0, 6577.0], [832.0, 6580.0], [835.0, 7082.303030303031], [834.0, 6596.0], [837.0, 7160.5], [836.0, 7162.0], [839.0, 7163.0], [838.0, 7160.0], [846.0, 7071.5], [845.0, 7080.0], [844.0, 7080.0], [843.0, 7108.0], [842.0, 7108.5], [841.0, 7112.0], [840.0, 7149.0], [855.0, 7032.0], [854.0, 7046.0], [892.0, 9133.0], [879.0, 6092.150000000001], [876.0, 6572.333333333333], [875.0, 9007.0], [874.0, 9006.0], [873.0, 9002.0], [872.0, 9004.5], [877.0, 6202.259259259259], [878.0, 6131.657142857142], [895.0, 9116.0], [881.0, 8981.0], [880.0, 8981.0], [883.0, 8983.0], [882.0, 8983.0], [885.0, 8965.0], [884.0, 8964.0], [887.0, 8966.0], [886.0, 8968.0], [894.0, 9115.0], [893.0, 9115.0], [891.0, 9134.0], [890.0, 9483.475982532753], [889.0, 8953.75], [888.0, 8971.0], [871.0, 9023.0], [870.0, 10099.423357664227], [869.0, 9149.333333333334], [868.0, 9148.4], [867.0, 9150.0], [866.0, 9148.0], [865.0, 9147.0], [864.0, 9150.0], [924.0, 6710.0], [927.0, 6706.0], [913.0, 8993.0], [912.0, 8994.0], [915.0, 6720.0], [914.0, 6670.103626943009], [917.0, 6715.0], [916.0, 6715.666666666667], [926.0, 6706.5], [925.0, 6711.0], [923.0, 6708.0], [922.0, 6711.166666666667], [921.0, 6715.0], [920.0, 6715.0], [911.0, 8996.0], [897.0, 9116.0], [896.0, 9118.0], [899.0, 9101.666666666666], [898.0, 9116.0], [901.0, 9063.360000000002], [900.0, 9095.0], [903.0, 9027.0], [902.0, 9023.666666666666], [910.0, 9010.0], [909.0, 9010.0], [908.0, 9010.0], [907.0, 9009.0], [906.0, 9008.0], [905.0, 9008.0], [904.0, 9025.0], [919.0, 6716.0], [918.0, 6714.0], [956.0, 6916.0], [959.0, 6470.8387096774195], [945.0, 8778.5], [944.0, 8979.502923976612], [947.0, 8796.0], [946.0, 8779.0], [949.0, 8795.0], [948.0, 8777.0], [958.0, 6954.0], [957.0, 6936.5], [955.0, 6919.5], [954.0, 6895.5], [953.0, 7841.114814814815], [952.0, 8816.666666666666], [943.0, 9287.0], [929.0, 6706.0], [928.0, 6709.0], [931.0, 8152.25], [930.0, 8324.209302325582], [933.0, 8215.0], [932.0, 8210.0], [935.0, 9396.801470588236], [934.0, 8206.0], [942.0, 9278.0], [941.0, 9260.0], [940.0, 9278.0], [939.0, 9270.0], [938.0, 9252.0], [937.0, 9261.0], [936.0, 9245.0], [951.0, 8809.0], [950.0, 8795.0], [988.0, 7878.0], [960.0, 6452.088235294117], [975.0, 8914.0], [974.0, 9131.421652421657], [973.0, 9753.0], [972.0, 9751.5], [971.0, 9751.0], [970.0, 9754.0], [969.0, 9751.0], [968.0, 10080.31070496084], [961.0, 7071.1538461538485], [991.0, 7878.5], [976.0, 8913.0], [978.0, 8913.666666666666], [977.0, 8914.0], [980.0, 7661.045454545457], [979.0, 8915.0], [983.0, 7869.25], [981.0, 7864.0], [990.0, 7876.0], [989.0, 7877.0], [987.0, 7876.4], [986.0, 7877.5], [984.0, 7874.599999999999], [967.0, 11895.0], [966.0, 11894.0], [965.0, 11903.0], [964.0, 11894.8], [963.0, 11893.0], [962.0, 11894.0], [1000.0, 9067.259356189486], [999.0, 9831.0], [998.0, 9830.0], [997.0, 9832.0], [996.0, 10010.829015544043], [995.0, 7876.0], [993.0, 7875.0], [992.0, 7875.0], [1.0, 2878.0]], "isOverall": false, "label": "MainPage /login HTTP Request", "isController": false}, {"data": [[846.306500000001, 7851.308700000003]], "isOverall": false, "label": "MainPage /login HTTP Request-Aggregated", "isController": false}, {"data": [[21.0, 147.0], [22.0, 159.0], [23.0, 188.28571428571428], [24.0, 216.33333333333334], [25.0, 185.36363636363637], [33.0, 239.66666666666666], [38.0, 304.0], [39.0, 227.0], [47.0, 325.2727272727273], [48.0, 237.0], [53.0, 229.85714285714286], [54.0, 222.2], [55.0, 431.0], [56.0, 351.5], [58.0, 297.25], [61.0, 250.33333333333334], [64.0, 396.33333333333337], [65.0, 294.0], [68.0, 331.5], [69.0, 331.25], [70.0, 385.0], [77.0, 486.1666666666667], [78.0, 400.0], [85.0, 519.0], [86.0, 582.0], [91.0, 516.5], [92.0, 528.6666666666666], [96.0, 757.0], [97.0, 745.0], [99.0, 724.25], [100.0, 667.0], [106.0, 652.5], [107.0, 654.1333333333334], [108.0, 672.5], [110.0, 838.375], [115.0, 739.0], [118.0, 918.0], [119.0, 766.6363636363636], [125.0, 557.2727272727274], [128.0, 831.3333333333334], [129.0, 688.375], [137.0, 656.0000000000001], [141.0, 792.875], [142.0, 687.0], [150.0, 777.0], [151.0, 783.0], [153.0, 967.4], [154.0, 848.5], [155.0, 779.0], [172.0, 1077.0], [173.0, 1077.3076923076922], [176.0, 1314.2], [177.0, 1183.8], [178.0, 1101.0], [190.0, 1212.0], [191.0, 1211.5555555555557], [194.0, 1496.25], [195.0, 1328.2222222222222], [208.0, 1087.814814814815], [211.0, 1680.0], [212.0, 1605.0], [213.0, 1467.6666666666667], [214.0, 1270.7777777777778], [215.0, 1134.0], [223.0, 1002.0], [224.0, 1011.4166666666666], [227.0, 1428.6666666666667], [228.0, 1371.5], [229.0, 1254.375], [230.0, 1089.2], [243.0, 1098.3333333333333], [244.0, 1107.0], [245.0, 1132.625], [246.0, 1158.75], [247.0, 1182.0], [255.0, 1732.6666666666667], [256.0, 1646.6], [257.0, 1517.2], [258.0, 1375.6666666666665], [271.0, 1445.7647058823532], [276.0, 1735.0], [277.0, 1544.1111111111109], [294.0, 1565.5], [295.0, 1565.1428571428573], [301.0, 2095.6666666666665], [302.0, 1994.6], [303.0, 1813.9999999999998], [304.0, 1601.5714285714284], [305.0, 1463.0], [326.0, 1683.2222222222222], [327.0, 1688.5], [328.0, 1718.0], [331.0, 2133.0], [332.0, 1968.5555555555557], [333.0, 1786.8], [334.0, 1716.0], [361.0, 2014.4166666666665], [362.0, 2015.0], [366.0, 2743.1578947368425], [368.0, 2667.0], [369.0, 2504.6666666666665], [370.0, 2358.6666666666665], [371.0, 2218.5], [372.0, 2060.0], [392.0, 2010.0000000000002], [393.0, 2009.9655172413795], [399.0, 2781.6666666666665], [398.0, 3956.5192307692305], [400.0, 2681.4], [401.0, 2500.8888888888887], [402.0, 2322.0], [403.0, 2184.8333333333335], [404.0, 2106.0], [423.0, 1889.6], [424.0, 1915.0], [425.0, 1948.5714285714284], [426.0, 1975.25], [427.0, 2002.0], [428.0, 2014.0], [429.0, 2054.3333333333335], [436.0, 2976.5], [437.0, 2837.6], [438.0, 2722.25], [439.0, 2568.5], [440.0, 2415.6], [441.0, 2216.7999999999997], [442.0, 2081.0], [467.0, 2276.6], [468.0, 2276.833333333333], [476.0, 3015.8], [477.0, 2860.1428571428573], [478.0, 2982.9117647058824], [479.0, 2510.625], [480.0, 2356.8], [506.0, 2546.8421052631584], [507.0, 2550.8461538461534], [516.0, 3196.222222222222], [515.0, 3319.0], [517.0, 3000.3333333333335], [518.0, 2873.0], [519.0, 2789.0], [520.0, 2665.0], [521.0, 2515.0], [522.0, 2414.5], [526.0, 3326.254098360655], [557.0, 2740.545454545455], [558.0, 2743.3076923076924], [566.0, 3672.6666666666665], [567.0, 3522.4444444444443], [568.0, 3342.2], [569.0, 3181.625], [570.0, 3016.0], [571.0, 2848.625], [597.0, 4560.970588235296], [591.0, 3942.4545454545446], [614.0, 3275.625], [612.0, 3239.0], [611.0, 3213.75], [613.0, 3261.0], [615.0, 3290.0], [632.0, 3757.6666666666665], [633.0, 3610.3333333333335], [634.0, 3428.2], [616.0, 3305.8], [618.0, 3365.3125], [628.0, 4339.142857142857], [629.0, 4199.25], [630.0, 4072.333333333333], [631.0, 3894.125], [660.0, 4304.692307692305], [685.0, 4385.5875], [672.0, 3504.8846153846157], [673.0, 3508.75], [678.0, 3855.703125], [682.0, 4764.666666666667], [683.0, 4664.4], [684.0, 4603.0], [686.0, 4460.4], [687.0, 4278.88888888889], [688.0, 4142.0], [689.0, 4031.8571428571427], [690.0, 3897.25], [691.0, 3733.0], [692.0, 3611.0], [695.0, 4596.601036269427], [723.0, 4670.477272727275], [755.0, 5353.222222222223], [741.0, 3984.9375], [742.0, 5607.499999999999], [743.0, 3986.6206896551726], [756.0, 5187.5], [757.0, 5002.0], [758.0, 4804.0], [759.0, 4695.0], [760.0, 4527.0], [761.0, 4335.285714285715], [762.0, 4155.0], [763.0, 3988.5], [764.0, 3899.0], [777.0, 5996.000000000001], [803.0, 4002.6], [802.0, 3979.0], [804.0, 4015.8333333333335], [805.0, 4038.6], [806.0, 4061.166666666667], [808.0, 4118.285714285714], [810.0, 4176.799999999999], [811.0, 4177.190476190476], [825.0, 5625.285714285715], [826.0, 5495.75], [827.0, 5371.166666666667], [828.0, 5202.142857142857], [829.0, 4985.0], [830.0, 4805.25], [831.0, 4638.444444444444], [817.0, 4981.820312499997], [832.0, 4464.2], [833.0, 4322.833333333333], [858.0, 5196.02625298329], [835.0, 5259.086538461538], [879.0, 4214.214285714285], [880.0, 4213.542857142858], [881.0, 4212.434782608697], [890.0, 6921.963963963966], [870.0, 7214.208333333332], [899.0, 5613.5], [896.0, 6032.333333333334], [907.0, 4469.25], [908.0, 4365.0], [897.0, 5929.0], [898.0, 5779.111111111111], [900.0, 5460.125], [901.0, 5294.2], [902.0, 5168.0], [903.0, 5011.0], [914.0, 6456.5215517241395], [904.0, 4846.0], [905.0, 4642.363636363636], [953.0, 5380.870129870131], [944.0, 8284.080745341616], [935.0, 7741.5454545454595], [930.0, 5689.999999999998], [978.0, 6316.142857142857], [961.0, 5481.83823529412], [974.0, 6639.488262910797], [968.0, 7148.774285714283], [962.0, 4853.735294117647], [963.0, 4857.206896551724], [984.0, 5222.9], [985.0, 4980.125], [987.0, 4764.799999999999], [979.0, 6164.4], [980.0, 5451.257425742571], [981.0, 5789.0], [982.0, 5611.6], [983.0, 5414.4], [1000.0, 6545.3746344057445], [996.0, 6196.726817042606]], "isOverall": false, "label": "MainPage /rooms HTTP Request", "isController": false}, {"data": [[852.904700000001, 5571.28660000002]], "isOverall": false, "label": "MainPage /rooms HTTP Request-Aggregated", "isController": false}, {"data": [[25.0, 64.0], [26.0, 30.5], [28.0, 101.33333333333334], [29.0, 138.0], [30.0, 164.66666666666666], [31.0, 188.0], [32.0, 185.5], [40.0, 236.0], [41.0, 237.0], [47.0, 255.5], [54.0, 218.375], [55.0, 244.0], [58.0, 288.0], [61.0, 243.33333333333331], [62.0, 240.83333333333334], [63.0, 222.8], [64.0, 235.0], [69.0, 334.0], [70.0, 360.0], [74.0, 397.3333333333333], [75.0, 339.0], [76.0, 351.8], [77.0, 366.0], [85.0, 518.3333333333333], [86.0, 499.5], [93.0, 481.5], [95.0, 516.6666666666666], [96.0, 541.0], [108.0, 675.6363636363637], [109.0, 666.5], [110.0, 675.0], [115.0, 723.0], [116.0, 683.8333333333334], [117.0, 566.5], [118.0, 544.5], [125.0, 551.6111111111111], [126.0, 535.0], [127.0, 512.3333333333334], [128.0, 522.2], [137.0, 655.75], [138.0, 594.5], [139.0, 597.4], [140.0, 605.5], [151.0, 774.3636363636364], [152.0, 706.1666666666667], [153.0, 724.5], [154.0, 751.6666666666666], [173.0, 1073.2500000000002], [174.0, 1002.875], [175.0, 1019.0], [191.0, 1211.6666666666665], [192.0, 1173.0], [193.0, 1155.8750000000002], [208.0, 1077.8], [209.0, 2584.5681818181815], [210.0, 1005.1666666666667], [211.0, 1008.0], [224.0, 1012.6923076923076], [225.0, 937.0], [226.0, 942.3333333333334], [227.0, 953.0], [247.0, 1197.3333333333333], [248.0, 1238.0909090909092], [250.0, 1211.3333333333333], [251.0, 1174.5], [252.0, 1175.0], [253.0, 1200.0], [254.0, 1207.888888888889], [271.0, 1443.4], [272.0, 1424.0], [273.0, 1354.2], [274.0, 1348.4285714285716], [275.0, 1346.0], [276.0, 1365.0], [295.0, 1539.4444444444443], [296.0, 1498.230769230769], [298.0, 1262.6], [299.0, 1279.25], [300.0, 1287.75], [301.0, 1290.8333333333335], [327.0, 1697.6666666666667], [328.0, 1701.4], [329.0, 1586.4], [330.0, 1701.3050847457623], [331.0, 1602.5], [362.0, 2014.8333333333333], [363.0, 1846.0], [364.0, 1862.0], [365.0, 1872.9999999999998], [366.0, 3166.8085106382973], [367.0, 1873.5555555555557], [368.0, 1882.0], [393.0, 2014.5], [394.0, 2012.8260869565215], [395.0, 1940.0], [396.0, 1931.0], [397.0, 1936.0], [398.0, 3462.1111111111118], [399.0, 1964.0], [429.0, 2052.909090909091], [430.0, 2057.266666666667], [431.0, 1894.0], [432.0, 1904.888888888889], [433.0, 1903.0], [434.0, 1896.3333333333335], [435.0, 1914.0], [436.0, 1920.3333333333333], [471.0, 2131.0], [468.0, 2276.1071428571427], [469.0, 2276.045454545454], [470.0, 2124.8], [472.0, 2151.5], [473.0, 2148.0], [474.0, 2159.75], [475.0, 2167.0], [476.0, 2154.0], [478.0, 4163.211920529801], [507.0, 2504.0], [508.0, 2422.0000000000005], [509.0, 2198.0], [510.0, 2196.2], [511.0, 2193.5555555555557], [512.0, 2193.8], [513.0, 2184.0], [514.0, 2201.0], [515.0, 2208.6666666666665], [526.0, 4801.280991735533], [558.0, 2739.416666666666], [559.0, 2742.1764705882347], [561.0, 2545.571428571429], [562.0, 2543.833333333333], [563.0, 2544.0], [564.0, 2560.0], [565.0, 2565.0], [566.0, 2564.0], [597.0, 4562.210937499998], [623.0, 3196.9999999999995], [618.0, 3367.3999999999996], [619.0, 3370.6363636363635], [622.0, 3193.25], [624.0, 3202.75], [625.0, 3189.6666666666665], [626.0, 3180.0], [627.0, 3186.2], [628.0, 3184.0], [660.0, 4502.973684210528], [674.0, 3506.3636363636365], [673.0, 3503.2], [682.0, 3323.2], [685.0, 4375.943925233642], [675.0, 3521.666666666667], [676.0, 3533.5], [677.0, 3313.4444444444443], [678.0, 4108.833333333334], [679.0, 3312.5555555555557], [695.0, 4891.919047619046], [680.0, 3315.5714285714284], [681.0, 3317.0], [723.0, 4640.534090909093], [748.0, 3575.8], [743.0, 3967.0], [744.0, 3892.0312500000005], [745.0, 3799.076923076923], [747.0, 3573.333333333333], [749.0, 3581.2], [750.0, 3583.4], [751.0, 3596.0], [742.0, 6310.125000000001], [752.0, 3591.0], [753.0, 3592.4], [754.0, 3608.5], [777.0, 5988.365384615382], [815.0, 3988.5], [811.0, 4178.181818181818], [812.0, 4180.666666666669], [813.0, 4187.538461538461], [816.0, 3992.0], [824.0, 3983.6666666666665], [825.0, 3984.0], [817.0, 4905.764044943818], [818.0, 3952.5], [819.0, 3957.0], [820.0, 3999.5], [821.0, 3989.333333333333], [822.0, 3986.8888888888887], [823.0, 3984.0], [858.0, 5011.771498771501], [835.0, 4861.992647058825], [882.0, 4202.5], [881.0, 4204.090909090909], [894.0, 3959.6666666666665], [895.0, 3963.75], [892.0, 3953.0], [893.0, 3958.25], [883.0, 4203.250000000001], [884.0, 4209.0], [886.0, 3931.5], [887.0, 3934.75], [888.0, 3939.5], [870.0, 7162.962962962964], [889.0, 3945.375], [890.0, 6735.440191387561], [891.0, 3954.5], [896.0, 3964.5], [914.0, 4755.7874396135285], [953.0, 5086.054982817872], [944.0, 7898.2429906542075], [935.0, 6057.575539568346], [930.0, 4465.01098901099], [971.0, 4303.5], [963.0, 4838.0], [961.0, 5620.568062827224], [974.0, 6529.545454545454], [975.0, 4308.571428571428], [964.0, 4765.612903225808], [965.0, 4636.968749999999], [966.0, 4644.555555555556], [976.0, 4319.75], [977.0, 4320.5], [978.0, 4328.0], [980.0, 5433.002506265669], [968.0, 7563.005405405406], [969.0, 4294.0], [970.0, 4301.0], [972.0, 4306.0], [973.0, 4310.0], [1000.0, 6279.17163982042], [996.0, 5945.859922178991]], "isOverall": false, "label": "MainPage /me HTTP Request", "isController": false}, {"data": [[853.7035999999988, 5283.238399999999]], "isOverall": false, "label": "MainPage /me HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 15214.566666666668, "minX": 1.66921494E12, "maxY": 355689.1666666667, "series": [{"data": [[1.66921494E12, 131766.96666666667], [1.66921506E12, 341062.0], [1.66921518E12, 84080.15], [1.669215E12, 355689.1666666667], [1.66921512E12, 332401.7166666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66921494E12, 16492.35], [1.66921506E12, 49519.333333333336], [1.66921518E12, 15214.566666666668], [1.669215E12, 48398.45], [1.66921512E12, 49875.3]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66921518E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1808.7170984455954, "minX": 1.66921494E12, "maxY": 9258.28855721392, "series": [{"data": [[1.66921494E12, 2618.629228687417], [1.66921506E12, 9258.28855721392], [1.66921518E12, 5455.253456221191], [1.669215E12, 8572.322323915652], [1.66921512E12, 8095.436995437002]], "isOverall": false, "label": "MainPage /login HTTP Request", "isController": false}, {"data": [[1.66921494E12, 1945.1478494623632], [1.66921506E12, 6623.73528336379], [1.66921518E12, 3690.689768976896], [1.669215E12, 6004.395078605612], [1.66921512E12, 5968.951853267086]], "isOverall": false, "label": "MainPage /rooms HTTP Request", "isController": false}, {"data": [[1.66921494E12, 1808.7170984455954], [1.66921506E12, 6198.323855243707], [1.66921518E12, 4002.273437499997], [1.669215E12, 5930.969429097596], [1.66921512E12, 5318.41877637131]], "isOverall": false, "label": "MainPage /me HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66921518E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1808.705699481864, "minX": 1.66921494E12, "maxY": 9258.282871357516, "series": [{"data": [[1.66921494E12, 2618.61163734777], [1.66921506E12, 9258.282871357516], [1.66921518E12, 5455.247004608295], [1.669215E12, 8572.31396736966], [1.66921512E12, 8095.430677430659]], "isOverall": false, "label": "MainPage /login HTTP Request", "isController": false}, {"data": [[1.66921494E12, 1945.130824372762], [1.66921506E12, 6623.728336380264], [1.66921518E12, 3690.6798679867943], [1.669215E12, 6004.386534518116], [1.66921512E12, 5968.944975162397]], "isOverall": false, "label": "MainPage /rooms HTTP Request", "isController": false}, {"data": [[1.66921494E12, 1808.705699481864], [1.66921506E12, 6198.319793205316], [1.66921518E12, 4002.2708333333353], [1.669215E12, 5930.9631675874825], [1.66921512E12, 5318.4131504922725]], "isOverall": false, "label": "MainPage /me HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66921518E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.66921494E12, "maxY": 39.88237384506039, "series": [{"data": [[1.66921494E12, 0.0], [1.66921506E12, 39.88237384506039], [1.66921518E12, 0.14377880184331793], [1.669215E12, 0.007958615200955033], [1.66921512E12, 15.039312039312072]], "isOverall": false, "label": "MainPage /login HTTP Request", "isController": false}, {"data": [[1.66921494E12, 1.057347670250895], [1.66921506E12, 28.591224862888552], [1.66921518E12, 0.0], [1.669215E12, 0.14217361585782667], [1.66921512E12, 36.677493312953885]], "isOverall": false, "label": "MainPage /rooms HTTP Request", "isController": false}, {"data": [[1.66921494E12, 0.0], [1.66921506E12, 30.91248153618907], [1.66921518E12, 0.10807291666666662], [1.669215E12, 9.377163904235724], [1.66921512E12, 19.727848101265796]], "isOverall": false, "label": "MainPage /me HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66921518E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 30.0, "minX": 1.66921494E12, "maxY": 17382.0, "series": [{"data": [[1.66921494E12, 4887.0], [1.66921506E12, 13039.0], [1.66921518E12, 10419.0], [1.669215E12, 11596.0], [1.66921512E12, 17382.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66921494E12, 3509.0], [1.66921506E12, 9976.0], [1.66921518E12, 6186.0], [1.669215E12, 9227.5], [1.66921512E12, 9091.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66921494E12, 4873.0], [1.66921506E12, 11791.42], [1.66921518E12, 9387.0], [1.669215E12, 9552.0], [1.66921512E12, 11094.89]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66921494E12, 4210.399999999998], [1.66921506E12, 10684.0], [1.66921518E12, 8060.0], [1.669215E12, 9458.0], [1.66921512E12, 9783.349999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66921494E12, 30.0], [1.66921506E12, 4795.0], [1.66921518E12, 1671.0], [1.669215E12, 3572.0], [1.66921512E12, 3442.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66921494E12, 2015.0], [1.66921506E12, 7202.0], [1.66921518E12, 4498.0], [1.669215E12, 6462.0], [1.66921512E12, 6312.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66921518E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 237.0, "minX": 1.0, "maxY": 9835.0, "series": [{"data": [[2.0, 7292.5], [6.0, 5801.0], [8.0, 9831.0], [11.0, 5170.0], [12.0, 5702.0], [13.0, 6633.0], [14.0, 7147.0], [17.0, 6966.0], [28.0, 4568.5], [29.0, 4999.0], [32.0, 5520.5], [38.0, 8030.5], [42.0, 4121.5], [46.0, 6700.0], [48.0, 7178.0], [52.0, 6519.0], [53.0, 7462.0], [54.0, 6425.5], [56.0, 9835.0], [57.0, 3485.0], [60.0, 4948.0], [61.0, 4509.0], [65.0, 6213.0], [70.0, 6113.0], [71.0, 3771.0], [72.0, 7314.0], [86.0, 6269.0], [84.0, 5218.0], [88.0, 1774.5], [94.0, 5717.0], [98.0, 9402.0], [96.0, 3537.0], [103.0, 237.0], [101.0, 4435.0], [106.0, 6806.0], [110.0, 5967.5], [111.0, 3336.0], [113.0, 4202.5], [112.0, 3952.0], [124.0, 320.0], [127.0, 650.0], [125.0, 1073.0], [129.0, 1817.0], [135.0, 2016.0], [128.0, 3368.0], [130.0, 9391.0], [138.0, 672.5], [137.0, 1445.0], [136.0, 9001.0], [145.0, 1195.0], [147.0, 4209.0], [153.0, 6799.0], [161.0, 1212.0], [167.0, 2015.0], [160.0, 5181.5], [163.0, 2546.0], [164.0, 5602.0], [172.0, 9148.0], [180.0, 6433.0], [191.0, 7210.0], [197.0, 2824.5], [194.0, 6398.0], [196.0, 5867.0], [199.0, 5370.0], [205.0, 5133.0], [210.0, 2743.0], [220.0, 3509.0], [216.0, 3984.0], [222.0, 4213.0], [227.0, 5769.0], [229.0, 8031.0], [231.0, 9019.0], [232.0, 6006.5], [234.0, 5151.0], [239.0, 5234.0], [245.0, 8353.0], [255.0, 5370.0], [254.0, 3920.0], [271.0, 4379.0], [275.0, 5474.0], [280.0, 4496.0], [277.0, 5631.0], [289.0, 8790.0], [291.0, 6985.0], [296.0, 5203.0], [297.0, 4565.0], [303.0, 5181.0], [317.0, 5612.0], [313.0, 5675.0], [307.0, 4975.0], [309.0, 4643.0], [331.0, 4855.0], [335.0, 6519.0], [322.0, 6629.5], [326.0, 5996.0], [347.0, 6518.0], [351.0, 6308.0], [338.0, 4799.0], [356.0, 6231.0], [380.0, 6440.0], [383.0, 6539.0], [376.0, 7928.0], [378.0, 6126.0], [394.0, 5284.5], [387.0, 6715.0], [396.0, 9307.5], [389.0, 7330.0], [402.0, 6020.0], [408.0, 6345.0], [420.0, 6359.0], [424.0, 8597.5], [422.0, 4659.0], [439.0, 6983.0], [445.0, 6791.0], [440.0, 6332.0], [448.0, 6177.0], [453.0, 6246.0], [455.0, 5313.0], [456.0, 5078.0], [485.0, 9450.0], [543.0, 7363.0], [1.0, 5693.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 543.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 237.0, "minX": 1.0, "maxY": 9835.0, "series": [{"data": [[2.0, 7292.5], [6.0, 5801.0], [8.0, 9831.0], [11.0, 5170.0], [12.0, 5702.0], [13.0, 6633.0], [14.0, 7147.0], [17.0, 6966.0], [28.0, 4568.5], [29.0, 4999.0], [32.0, 5520.5], [38.0, 8030.5], [42.0, 4121.5], [46.0, 6700.0], [48.0, 7178.0], [52.0, 6519.0], [53.0, 7462.0], [54.0, 6425.5], [56.0, 9835.0], [57.0, 3485.0], [60.0, 4948.0], [61.0, 4509.0], [65.0, 6213.0], [70.0, 6113.0], [71.0, 3771.0], [72.0, 7314.0], [86.0, 6269.0], [84.0, 5218.0], [88.0, 1774.5], [94.0, 5717.0], [98.0, 9402.0], [96.0, 3537.0], [103.0, 237.0], [101.0, 4435.0], [106.0, 6806.0], [110.0, 5967.5], [111.0, 3336.0], [113.0, 4202.5], [112.0, 3952.0], [124.0, 320.0], [127.0, 650.0], [125.0, 1073.0], [129.0, 1817.0], [135.0, 2016.0], [128.0, 3368.0], [130.0, 9391.0], [138.0, 672.5], [137.0, 1445.0], [136.0, 9001.0], [145.0, 1195.0], [147.0, 4209.0], [153.0, 6799.0], [161.0, 1212.0], [167.0, 2015.0], [160.0, 5181.5], [163.0, 2546.0], [164.0, 5602.0], [172.0, 9148.0], [180.0, 6433.0], [191.0, 7210.0], [197.0, 2824.5], [194.0, 6398.0], [196.0, 5867.0], [199.0, 5370.0], [205.0, 5133.0], [210.0, 2743.0], [220.0, 3509.0], [216.0, 3984.0], [222.0, 4213.0], [227.0, 5769.0], [229.0, 8031.0], [231.0, 9019.0], [232.0, 6006.5], [234.0, 5151.0], [239.0, 5234.0], [245.0, 8353.0], [255.0, 5370.0], [254.0, 3920.0], [271.0, 4379.0], [275.0, 5474.0], [280.0, 4496.0], [277.0, 5631.0], [289.0, 8790.0], [291.0, 6985.0], [296.0, 5203.0], [297.0, 4565.0], [303.0, 5181.0], [317.0, 5612.0], [313.0, 5675.0], [307.0, 4975.0], [309.0, 4643.0], [331.0, 4855.0], [335.0, 6519.0], [322.0, 6629.5], [326.0, 5996.0], [347.0, 6518.0], [351.0, 6308.0], [338.0, 4799.0], [356.0, 6231.0], [380.0, 6440.0], [383.0, 6539.0], [376.0, 7928.0], [378.0, 6126.0], [394.0, 5284.5], [387.0, 6715.0], [396.0, 9307.5], [389.0, 7330.0], [402.0, 6020.0], [408.0, 6345.0], [420.0, 6359.0], [424.0, 8597.5], [422.0, 4659.0], [439.0, 6983.0], [445.0, 6791.0], [440.0, 6332.0], [448.0, 6177.0], [453.0, 6246.0], [455.0, 5313.0], [456.0, 5078.0], [485.0, 9450.0], [543.0, 7363.0], [1.0, 5693.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 543.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 29.566666666666666, "minX": 1.66921494E12, "maxY": 141.18333333333334, "series": [{"data": [[1.66921494E12, 58.38333333333333], [1.66921506E12, 136.96666666666667], [1.66921518E12, 29.566666666666666], [1.669215E12, 141.18333333333334], [1.66921512E12, 133.9]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66921518E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 12.316666666666666, "minX": 1.66921494E12, "maxY": 94.01666666666667, "series": [{"data": [[1.66921494E12, 34.68333333333333], [1.66921506E12, 90.71666666666667], [1.66921518E12, 22.9], [1.669215E12, 94.01666666666667], [1.66921512E12, 91.01666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.66921494E12, 12.316666666666666], [1.66921506E12, 46.9], [1.66921518E12, 18.083333333333332], [1.669215E12, 41.88333333333333], [1.66921512E12, 47.483333333333334]], "isOverall": false, "label": "201", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66921518E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 10.1, "minX": 1.66921494E12, "maxY": 48.766666666666666, "series": [{"data": [[1.66921494E12, 18.6], [1.66921506E12, 45.583333333333336], [1.66921518E12, 10.1], [1.669215E12, 48.766666666666666], [1.66921512E12, 43.61666666666667]], "isOverall": false, "label": "MainPage /rooms HTTP Request-success", "isController": false}, {"data": [[1.66921494E12, 16.083333333333332], [1.66921506E12, 45.13333333333333], [1.66921518E12, 12.8], [1.669215E12, 45.25], [1.66921512E12, 47.4]], "isOverall": false, "label": "MainPage /me HTTP Request-success", "isController": false}, {"data": [[1.66921494E12, 12.316666666666666], [1.66921506E12, 46.9], [1.66921518E12, 18.083333333333332], [1.669215E12, 41.88333333333333], [1.66921512E12, 47.483333333333334]], "isOverall": false, "label": "MainPage /login HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66921518E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 40.983333333333334, "minX": 1.66921494E12, "maxY": 138.5, "series": [{"data": [[1.66921494E12, 47.0], [1.66921506E12, 137.61666666666667], [1.66921518E12, 40.983333333333334], [1.669215E12, 135.9], [1.66921512E12, 138.5]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66921518E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

